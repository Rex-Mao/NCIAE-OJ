<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[乘积最大]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<span>今年是国际数学联盟确定的“2000——世界数学年”，又恰逢我国著名数学家华罗庚先生诞辰90周年。在华罗庚先生的家乡江苏金坛，组织了一场别开生面的数学智力竞赛的活动，你的一个好朋友XZ也有幸得以参加。活动中，主持人给所有参加活动的选手出了这样一道题目：</span><br />
<span>设有一个长度为N的数字串，要求选手使用K个乘号将它分成K+1个部分，找出一种分法，使得这K+1个部分的乘积能够为最大。</span><br />
<span>同时，为了帮助选手能够正确理解题意，主持人还举了如下的一个例子：</span><br />
<span>有一个数字串：312， 当N=3，K=1时会有以下两种分法：</span><br />
<br />
<span>&nbsp; &nbsp; 1) &nbsp;3*12=36</span><br />
<span>&nbsp; &nbsp; 2) &nbsp;31*2=62</span><br />
<span>&nbsp; &nbsp;</span><br />
<span>这时，符合题目要求的结果是：31*2=62</span><br />
<span style="line-height:1.5;">现在，请你帮助你的好朋友XZ设计一个程序，求得正确的答案。</span><br />
<div>
	<span style="line-height:1.5;"><br />
</span> 
</div>]]></description>
<input><![CDATA[<span>每个测试文件只包含一组测试数据，每组输入有两行：</span><br />
<span>第一行输入两个自然数N，K（6≤N≤40，1≤K≤6）。</span><br />
<span>第二行输入一个长度为N的数字串。</span><br />
<div>
	<span><br />
</span> 
</div>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出所求得的最大乘积（一个自然数）。
</p>
<div>
	<br />
</div>]]></output>
<sample_input><![CDATA[4 2
1231]]></sample_input>
<sample_output><![CDATA[62]]></sample_output>
  <test_input><![CDATA[10 5
7777777777
]]></test_input>
<test_output><![CDATA[1722499009
]]></test_output>
<test_input><![CDATA[9 4
321044105
]]></test_input>
<test_output><![CDATA[5166000
]]></test_output>
<test_input><![CDATA[6 1
101010
]]></test_input>
<test_output><![CDATA[10100
]]></test_output>
<test_input><![CDATA[8 3
22222222
]]></test_input>
<test_output><![CDATA[234256
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛提高组 2000年NOIP全国联赛提高组]]></source>
		<solution language="C++"><![CDATA[#include<iostream>  
#include<string>
#define LL long long  
using namespace std;  
int n,k;  
char a[50];  
LL num[50][50];  
LL dp[50][50][10];  
int main()  
{  
    cin>>n>>k;  
    cin>>a;  
    for(int i=0;i<n;i++)  
    {  
        num[i][i]=a[i]-'0';  
        dp[i][i][0]=num[i][i];  
        for(int j=i+1;j<n;j++)  
        {  
            num[i][j]=num[i][j-1]*10+(a[j]-'0');  
            dp[i][j][0]=num[i][j];  
        }  
    }  
    for(int i=0; i<n;i++)  
    {  
        for(int j=i+1;j<n;j++)  
        {  
            for(int kk=1;kk<=k;kk++)  
            {  
                LL maxV=0;  
                for(int m=i;m<=j;m++)  
                {  
                    for(int left=0;left<=kk;left++)  
                    {  
                        if(dp[i][m][left]*dp[m+1][j][kk-left-1]>maxV)  
                            maxV=dp[i][m][left]*dp[m+1][j][kk-left-1];  
                    }  
                }  
                dp[i][j][kk]=maxV;  
            }  
        }  
    }  
    cout<<dp[0][n-1][k];  
    return 0;  
}]]></solution>
			<solution language="Pascal"><![CDATA[var n,k,i,j,l:integer;a:array[0..50] of integer;sum,f:array[0..50,0..50] of int64;ch:char;
function max(x,y:int64):int64;
 begin
  if x>y then exit(x) else exit(y);
 end;
procedure init;
 begin
  readln(n,k);
  fillchar(sum,sizeof(sum),0);
  for i:=1 to n do
   begin
    read(ch);
    val(ch,a[i]);
    sum[i,i]:=a[i];
   end;
  fillchar(f,sizeof(f),0);
  for i:=1 to n-1 do
  for j:=i+1 to n do
  sum[i,j]:=sum[i,j-1]*10+a[j];
  for i:=1 to n do
   f[0,i]:=sum[1,i];
 end;
begin
 init;
 for i:=1 to k do
 for j:=i to n do
 for l:=1 to j do
  f[i,j]:=max(f[i,j],f[i-1,l]*sum[l+1,j]);
 writeln(f[k,n]);
end.]]></solution>
	</item>
</fps>
