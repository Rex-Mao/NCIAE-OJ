<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[Jam的计数法]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<p>
	Jam是个喜欢标新立异的科学怪人。他不使用阿拉伯数字计数，而是使用小写英文字母计数，他觉得这样做，会使世界更加丰富多彩。在他的计数法中，每个数字的位数都是相同的（使用相同个数的字母），英文字母按原先的顺序，排在前面的字母小于排在它后面的字母。我们把这样的“数字”称为Jam数字。在Jam数字中，每个字母互不相同，而且从左到右是严格递增的。每次，Jam还指定使用字母的范围，例如，从2到10，表示只能使用{b,c,d,e,f,g,h,i,j}这些字母。如果再规定位数为5，那么，紧接在Jam数字“bdfij”之后的数字应该是“bdghi”。（如果我们用U、V依次表示Jam数字“bdfij”与“bdghi”，则U&lt;V，且不存在Jam数字P，使U&lt;P&lt;V）。你的任务是：对于从文件读入的一个Jam数字，按顺序输出紧接在后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[每组输入数据有2行，第1行为3个正整数，用一个空格隔开：<br />
<p>
	<span style="line-height:1.5;">s</span><span style="line-height:1.5;">&nbsp;t w</span>
</p>
<p>
	<span style="line-height:1.5;">（其中s为所使用的最小的字母的序号，t为所使用的最大的字母的序号。w为数字的位数，这3个数满足：1≤s&lt;T≤26，2≤w≤t-s ）</span>
</p>
第2行为具有w个小写字母的字符串，为一个符合要求的Jam数字。<br />
<p>
	<span style="line-height:1.5;">所给的数据都是正确的，不必验证。</span>
</p>
<p>
	<span style="line-height:1.5;"><br />
</span>
</p>]]></input> 
<output><![CDATA[<p>
	每组输出最多为5行，为紧接在输入的Jam数字后面的5个Jam数字，如果后面没有那么多Jam数字，那么有几个就输出几个。每行只输出一个Jam数字，是由w个小写字母组成的字符串，不要有多余的空格。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[2 10 5
bdfij]]></sample_input>
<sample_output><![CDATA[bdghi
bdghj
bdgij
bdhij
befgh]]></sample_output>
  <test_input><![CDATA[2 9 4
bchi
]]></test_input>
<test_output><![CDATA[bdef
bdeg
bdeh
bdei
bdfg
]]></test_output>
<test_input><![CDATA[5 20 8
fhijmpqt

]]></test_input>
<test_output><![CDATA[fhijmprs
fhijmprt
fhijmpst
fhijmqrs
fhijmqrt
]]></test_output>
<test_input><![CDATA[2 10 5
cefij

]]></test_input>
<test_output><![CDATA[ceghi
ceghj
cegij
cehij
cfghi
]]></test_output>
<test_input><![CDATA[5 22 10
efhijmpqtu

]]></test_input>
<test_output><![CDATA[efhijmpqtv
efhijmpquv
efhijmprst
efhijmprsu
efhijmprsv
]]></test_output>
<test_input><![CDATA[5 24 14
efhijklmpqrtuw

]]></test_input>
<test_output><![CDATA[efhijklmpqrtux
efhijklmpqrtvw
efhijklmpqrtvx
efhijklmpqrtwx
efhijklmpqruvw
]]></test_output>
<test_input><![CDATA[2 24 19
cdfghijklmopqrtuvwx

]]></test_input>
<test_output><![CDATA[cdfghijklmopqstuvwx
cdfghijklmoprstuvwx
cdfghijklmoqrstuvwx
cdfghijklmpqrstuvwx
cdfghijklnopqrstuvw
]]></test_output>
<test_input><![CDATA[4 24 17
dfghijklmopqrtuvw

]]></test_input>
<test_output><![CDATA[dfghijklmopqrtuvx
dfghijklmopqrtuwx
dfghijklmopqrtvwx
dfghijklmopqruvwx
dfghijklmopqstuvw
]]></test_output>
<test_input><![CDATA[2 14 6
defijm

]]></test_input>
<test_output><![CDATA[defijn
defikl
defikm
defikn
defilm
]]></test_output>
<test_input><![CDATA[2 14 8
bdefhijm

]]></test_input>
<test_output><![CDATA[bdefhijn
bdefhikl
bdefhikm
bdefhikn
bdefhilm
]]></test_output>
<test_input><![CDATA[5 22 14
efhijklmpqrtuv

]]></test_input>
<test_output><![CDATA[efhijklmpqstuv
efhijklmprstuv
efhijklmqrstuv
efhijklnopqrst
efhijklnopqrsu
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组-2006年NOIP全国联赛普及组]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<string>
#include<cstring>
using namespace std;
int s, t, w;
string num;
bool hasNext(int i, char c) {
	if (c>=('a'+t-1-(w-1-i))) return false;
	else return true;
}
void changeLater(int i) {
	for (i++; i < w; i++)
		num[i] = num[i-1]+1;
}
void next() {
	for (int i = w-1; i >= 0; i--) {
		if (hasNext(i, num[i])) {
			num[i] = num[i]+1;
			changeLater(i);
			break;
		}
	}
	cout << num << endl;
}
int main() {
	while (cin >> s >> t >> w) {
		cin >> num;
		for (int i = 0; i < 5; i++)
			next();
	}
	return 0;
}]]></solution>
			<solution language="Pascal"><![CDATA[var s,t,w,i,j,k:longint;str:string;
begin
  readln(s,t,w);
  readln(str);
  for i:=1 to 5 do
    begin
      j:=w;
      while (j>0)and(ord(str[j])-96=t-(w-j)) do dec(j);
      if j=0 then break;
      str[j]:=chr(ord(str[j])+1);
      for k:=j+1 to w do str[k]:=chr(ord(str[k-1])+1);
      writeln(str);
    end;
end.]]></solution>
	</item>
</fps>
