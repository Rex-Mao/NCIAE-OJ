<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[守望者的逃离]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<p>
	恶魔猎手尤迪安野心勃勃，他背叛了暗夜精灵，率领深藏在海底的娜迦族企图叛变。守望者在与尤迪安的交锋中遭遇了围杀，被困在一个荒芜的大岛上。为了杀死守望者，尤迪安开始对这个荒岛施咒，这座岛很快就会沉下去。到那时，岛上的所有人都会遇难。守望者的跑步速度为17m/s，以这样的速度是无法逃离荒岛的。庆幸的是守望者拥有闪烁法术，可在1s内移动60m，不过每次使用闪烁法术都会消耗魔法值10点。守望者的魔法值恢复的速度为4点/s，只有处在原地休息状态时才能恢复。
</p>
<p>
	现在已知守望者的魔法初值M，他所在的初始位置与岛的出口之间的距离S，岛沉没的时间T。你的任务是写一个程序帮助守望者计算如何在最短的时间内逃离荒岛，若不能逃出，则输出守望者在剩下的时间内能走的最远距离。注意：守望者跑步、闪烁或休息活动均以秒（s）为单位，且每次活动的持续时间为整数秒。距离的单位为（m）。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每组输入数据仅一行，包括空格隔开的三个非负整数M，S，T。
</p>
<p>
	<br />
</p>
<p>
	<span style="line-height:1.5;">数据规模：</span>
</p>
<p>
	30%的数据满足1&lt;=T&lt;=10，1&lt;=S&lt;=100；
</p>
<p>
	50%的数据满足1&lt;=T&lt;=1000，1&lt;=S&lt;=10000；
</p>
<p>
	100%的数据满足1&lt;=T&lt;=300000，0&lt;=M&lt;=1000，1&lt;=S&lt;=10<sup>8</sup>
</p>
<p>
	<sup><br />
</sup>
</p>]]></input> 
<output><![CDATA[每组输出包含两行：<br />
<p>
	<span style="line-height:1.5;">第1行为字符串“Yes”或“No”（区分大小写），即守望者是否能逃离荒岛。</span> 
</p>
第2行包含一个整数。第一行为“Yes”（区分大小写）时表示守望者逃离荒岛的最短时间；<br />
<p>
	<span style="line-height:1.5;">第一行为“No”（区分大小写）时表示守望者能走的最远距离。</span> 
</p>
<p>
	<span style="line-height:1.5;"><br />
</span> 
</p>]]></output>
<sample_input><![CDATA[39 200 4

36 255 10]]></sample_input>
<sample_output><![CDATA[No
197

Yes
6]]></sample_output>
  <test_input><![CDATA[13 55 1]]></test_input>
<test_output><![CDATA[Yes
1
]]></test_output>
<test_input><![CDATA[939 2153365 99010
]]></test_input>
<test_output><![CDATA[No
1701334
]]></test_output>
<test_input><![CDATA[100 99054932 500]]></test_input>
<test_output><![CDATA[No
9000
]]></test_output>
<test_input><![CDATA[251 6724 458
]]></test_input>
<test_output><![CDATA[Yes
330
]]></test_output>
<test_input><![CDATA[894 3488831 203292
]]></test_input>
<test_output><![CDATA[Yes
203292
]]></test_output>
<test_input><![CDATA[366 9568 686
]]></test_input>
<test_output><![CDATA[Yes
467
]]></test_output>
<test_input><![CDATA[320 85934537 874
]]></test_input>
<test_output><![CDATA[No
16354
]]></test_output>
<test_input><![CDATA[251 6724 20
]]></test_input>
<test_output><![CDATA[No
1200
]]></test_output>
<test_input><![CDATA[5 98 8]]></test_input>
<test_output><![CDATA[Yes
6
]]></test_output>
<test_input><![CDATA[4 50 6
]]></test_input>
<test_output><![CDATA[Yes
3
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组-2007年NOIP全国联赛普及组]]></source>
		<solution language="C++"><![CDATA[#include<cstdio>
using namespace std;
int a,b;
int main()
{
    int m,s,t,i;
    scanf("%d%d%d",&m,&s,&t);
    for(i=1;i<=t;++i)
    {
        a+=17;
        if(m>=10)
        {
            b+=60;
            m-=10;
        }
        else
          m+=4;
        if(b>a)
          a=b;
        if(a>=s)
        {
            printf("Yes");
            printf("\n");
            printf("%d",i);
            return 0;
        }
    }
    if(a>=s)
    {
        printf("Yes");
        printf("\n");
        printf("%d",i-1);
    }
    if(a<s)
    {
        printf("No");
        printf("\n");
        printf("%d",a);
    }
    return 0;
}]]></solution>
			<solution language="Pascal"><![CDATA[var 
m,s,t,ti:longint; 
ms:array[1..2,0..300000] of longint; 
ts:array[0..300000] of longint; 
begin 
readln(m,s,t); 
ms[2,0]:=m; 
ts[0]:=0; 
for ti:=1 to t do 
begin 
if ms[2,ti-1]>=10 then 
begin 
ms[1,ti]:=ms[1,ti-1]+60; 
ms[2,ti]:=ms[2,ti-1]-10; 
end 
else 
begin 
ms[1,ti]:=ms[1,ti-1]; 
ms[2,ti]:=ms[2,ti-1]+4; 
end; 
if ts[ti-1]+17>ms[1,ti] then ts[ti]:=ts[ti-1]+17 else ts[ti]:=ms[1,ti]; 
if ts[ti]>=s then 
begin 
writeln('Yes'); 
writeln(ti); 
close(output);
halt; 
end; 
end; 
writeln('No'); 
writeln(ts[t]); 
end. ]]></solution>
	</item>
</fps>
