<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[自由落体]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<img><src><![CDATA[http://tk.hustoj.com:80/attached/image/20140111/20140111222225_26749.gif]]></src><base64><![CDATA[]]></base64></img><description><![CDATA[<p>
	在高为<span style="line-height:1.5;">H的天花板上有n个小球，体积不计，位置分别为0，1，2，... n-1。在地面上有一个小车（长为L，高为K，距原点距离为 S1）。已知小球下落距离计算公式为d＝1/2*g*(t^2)，其中g=10，t为下落时间。地面上的小车以速度V前进。</span> 
</p>
<p>
	<span style="line-height:1.5;">如下图：</span> 
</p>
<p style="text-align:center;">
	<span style="line-height:1.5;"><img src="http://tk.hustoj.com:80/attached/image/20140111/20140111222225_26749.gif" alt="" /><br />
</span> 
</p>
<p style="text-align:left;">
	<span style="line-height:1.5;">小车与所有小球同时开始运动，当小球距小车的距离&lt;=0.00001时，即认为小球被小车接受（小球落到地面后不能被接受）。<br />
</span><span style="line-height:1.5;">请你计算出小车能接受到多少个小球。</span><span style="line-height:1.5;"><br />
<br />
</span> 
</p>]]></description>
<input><![CDATA[<p>
	每个测试文件只包含一组测试数据，每组输入H，S1，V，L，K，n（<span style="line-height:1.5;">1&lt;=H，S1，V，L，K，n&lt;=100000）。</span> 
</p>
<p>
	<span style="line-height:1.5;"><br />
</span> 
</p>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出小车能接受到的小球个数。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[5.0 9.0 5.0 2.5 1.8 5]]></sample_input>
<sample_output><![CDATA[1]]></sample_output>
  <test_input><![CDATA[10 10 10 10 10 10
]]></test_input>
<test_output><![CDATA[10
]]></test_output>
<test_input><![CDATA[5 9 4.999999 2 1.8 5
]]></test_input>
<test_output><![CDATA[1
]]></test_output>
<test_input><![CDATA[10 10000 1000 1000 2 9999
]]></test_input>
<test_output><![CDATA[1150
]]></test_output>
<test_input><![CDATA[100 500 10 10 1 1000
]]></test_input>
<test_output><![CDATA[10
]]></test_output>
<test_input><![CDATA[10 100 10 10 1 85
]]></test_input>
<test_output><![CDATA[0
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛提高组 2002年NOIP全国联赛提高组]]></source>
		<solution language="C++"><![CDATA[/*
题目大意:
思路：
*/
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<cmath>
#include<string>
#include<cstdio>
#include <vector>
#include<cstring>
#include<sstream>
#include<cstdlib>
#include<iostream>
#include<algorithm>
using namespace std;
#define ll long long
#define ul unsigned long long
#define inf 0x3f3f3f
#define esp 1e-8
#define pp printf("\n");
#define pn(a) printf("%d\n",a);
#define bug printf("mmp\n");
#define mm(a,b) memset(a,b,sizeof(a))
#define T() int test,q=1;scanf("%d",&test); while(test--)
const int maxn=2e6+10;
const double pi=acos(-1.0);
const int N=1001;
const int mod=1e9+7;
int main()
{
    double H,s1,v,l,k;
    int n;
    while(scanf("%lf%lf%lf%lf%lf%d",&H,&s1,&v,&l,&k,&n)!=EOF)
    {
        double tmax=sqrt(H/5);
        double tmin=sqrt((H-k)/5);
        int cnt=0;
        double x1=s1-v*tmax;
        double x2=s1-v*tmin+l;
        for(int i=0; i<n; i++)
        {
            if(i>=x1-0.00001&&i<=x2+0.00001)
                cnt++;
        }
        printf("%d\n",cnt);
    }
    return 0;
}
]]></solution>
			<solution language="Pascal"><![CDATA[var  
 h,h1,s1,v,l,k,t:real;  
 n,i,ans:longint;  
begin  
readln(h,s1,v,l,k,n);  
 ans:=0;  
for i:=0 to n-1 do  
 begin  
  if i>s1 then break;  
  t:=(s1-i)/v;  
  h1:=5*sqr(t);  
 if h1>h+0.00001 then continue;  
  t:=(s1-i+l+0.0001)/v;  
  h1:=5*sqr(t);  
  if h1<h-k-0.00001 then continue;  
  inc(ans);  
 end;  
 writeln(ans);  
end. ]]></solution>
	</item>
</fps>
