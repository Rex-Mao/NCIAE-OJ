<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[金明的预算方案]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<p>
	金明今天很开心，家里购置的新房就要领钥匙了，新房里有一间金明自己专用的很宽敞的房间。更让他高兴的是，妈妈昨天对他说：“你的房间需要购买哪些物品，怎么布置，你说了算，只要不超过N元钱就行”。今天一早，金明就开始做预算了，他把想买的物品分为两类：主件与附件，附件是从属于某个主件的，下表就是一些主件与附件的例子：
</p>
<p style="text-align:center;">
	<table class="MsoNormalTable ke-zeroborder" border="0" cellspacing="0" cellpadding="0">
		<tbody>
			<tr>
				<td width="81" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">主件<span></span></span>
					</p>
				</td>
				<td width="132" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">附件<span></span></span>
					</p>
				</td>
			</tr>
			<tr>
				<td width="81" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">电脑<span></span></span>
					</p>
				</td>
				<td width="132" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">打印机，扫描仪<span></span></span>
					</p>
				</td>
			</tr>
			<tr>
				<td width="81" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">书柜<span></span></span>
					</p>
				</td>
				<td width="132" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">图书<span></span></span>
					</p>
				</td>
			</tr>
			<tr>
				<td width="81" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">书桌<span></span></span>
					</p>
				</td>
				<td width="132" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">台灯，文具<span></span></span>
					</p>
				</td>
			</tr>
			<tr>
				<td width="81" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">工作椅<span></span></span>
					</p>
				</td>
				<td width="132" valign="top" style="border:solid windowtext 1.0pt;">
					<p class="MsoNormal" align="left" style="text-align:center;">
						<span style="font-size:12.0pt;font-family:宋体;">无<span></span></span>
					</p>
				</td>
			</tr>
		</tbody>
	</table>
</p>
<p>
	如果要买归类为附件的物品，必须先买该附件所属的主件。每个主件可以有0个、1个或2个附件。附件不再有从属于自己的附件。金明想买的东西很多，肯定会超过妈妈限定的N元。于是，他把每件物品规定了一个重要度，分为5等：用整数1~5表示，第5等最重要。他还从因特网上查到了每件物品的价格（都是10元的整数倍）。他希望在不超过N元（可以等于N元）的前提下，使每件物品的价格与重要度的乘积的总和最大。
</p>
<p>
	设第j件物品的价格为v[j]，重要度为w[j]，共选中了k件物品，编号依次为j1，j2，...，jk，则所求的总和为：
</p>
<p>
	v[j1]*w[j1]+v[j2]*w[j2]+ …+v[jk]*w[jk]。（其中*为乘号）
</p>
<p>
	请你帮助金明设计一个满足要求的购物单。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[每组输入数据的第1行，为两个正整数，用一个空格隔开：<br />
<p>
	<span style="line-height:1.5;">N m</span>
</p>
<p>
	<span style="line-height:1.5;">（其中N（&lt;32000）表示总钱数，m（&lt;60）为希望购买物品的个数。）</span>
</p>
从第2行到第m+1行，第j行给出了编号为j-1的物品的基本数据，每行有3个非负整数<br />
<p>
	<span style="line-height:1.5;">v p q</span>
</p>
<p>
	<span style="line-height:1.5;">（其中v表示该物品的价格（v&lt;10000），p表示该物品的重要度（1~5），q表示该物品是主件还是附件。如果q=0，表示该物品为主件，如果q&gt;0，表示该物品为附件，q是所属主件的编号）</span>
</p>
<p>
	<span style="line-height:1.5;"><br />
</span>
</p>]]></input> 
<output><![CDATA[<p>
	每组输出只有一个正整数，为不超过总钱数的物品的价格与重要度乘积的总和的最大值（&lt;200000）。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[1000 5
800 2 0
400 5 1
300 5 1
400 3 0
500 2 0]]></sample_input>
<sample_output><![CDATA[2200]]></sample_output>
  <test_input><![CDATA[14000 25
100 3 0
400 5 0
1300 5 1
1400 2 2
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 4 0
440 5 10
1340 5 10
1430 3 0
500 2 0
800 2 0
1400 5 0
300 4 0
1400 3 0
500 2 0
1800 2 0
400 5 20
1310 5 20
1400 3 0
500 2 0
]]></test_input>
<test_output><![CDATA[59350
]]></test_output>
<test_input><![CDATA[30000 50
100 2 0
400 5 1
1300 5 1
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 9
1300 5 9
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 20
1300 5 20
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 31
1300 5 31
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 39
1300 5 39
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0

]]></test_input>
<test_output><![CDATA[120800
]]></test_output>
<test_input><![CDATA[6000 15
100 3 0
400 5 0
300 5 0
1400 2 3
500 2 2
800 2 3
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 4 0
440 5 10
1340 5 10
430 3 0
500 2 0
]]></test_input>
<test_output><![CDATA[26400
]]></test_output>
<test_input><![CDATA[8000 20
100 3 0
400 5 0
300 5 0
1400 2 2
500 2 2
800 2 3
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 4 0
440 5 10
1340 5 10
1430 3 0
500 2 0
800 2 0
1400 5 0
300 4 0
400 3 0
500 3 18
]]></test_input>
<test_output><![CDATA[36400
]]></test_output>
<test_input><![CDATA[1500 7
500 1 0
400 4 0
300 5 1
400 5 1
200 5 0
500 4 0
400 4 0
]]></test_input>
<test_output><![CDATA[6200
]]></test_output>
<test_input><![CDATA[18000 30
100 3 0
400 5 0
1300 5 1
1400 2 2
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 4 0
400 5 9
1300 5 9
1400 3 0
500 2 0
800 2 0
1400 5 0
300 4 0
1400 3 0
500 2 0
1800 2 0
400 5 20
1300 5 20
1400 3 0
500 2 0
800 5 0
1400 5 0
300 5 0
1400 3 27
500 2 27
]]></test_input>
<test_output><![CDATA[75800
]]></test_output>
<test_input><![CDATA[4500 12
100 3 0
400 5 0
300 5 0
1400 2 0
500 2 0
800 2 4
1400 5 4
300 5 0
1400 3 8
500 2 0
1800 4 0
440 5 10
]]></test_input>
<test_output><![CDATA[16700
]]></test_output>
<test_input><![CDATA[2000 10
500 1 0
400 4 0
300 5 1
400 5 1
200 5 0
500 4 5
400 4 0
320 2 0
410 3 0
400 3 5
]]></test_input>
<test_output><![CDATA[7430
]]></test_output>
<test_input><![CDATA[1000 5
300 5 0
400 2 0
300 5 2
300 4 2
600 4 0]]></test_input>
<test_output><![CDATA[3900
]]></test_output>
<test_input><![CDATA[24000 40
100 2 0
400 5 0
1300 5 1
1400 3 2
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 9
1300 5 9
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 20
1300 5 20
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0
1800 2 0
400 5 31
1300 5 31
1400 3 0
500 2 0
800 2 0
1400 5 0
300 5 0
1400 3 0
500 2 0

]]></test_input>
<test_output><![CDATA[96000
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛提高组-2006年NOIP全国联赛提高组]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int N=40005,M=105;
struct node{
	int v,p,q,fn;
	int fv[2],fp[2];
};
node a[M];
int f[N]={0};
int n,m;
void init()
{

	cin>>n>>m;
	memset(a,0,(m+1)*sizeof(node));
	for(int i=1;i<=m;i++)
	{
		cin>>a[i].v>>a[i].p>>a[i].q;
		if(a[i].q)
		{
			int k=a[a[i].q].fn;
			a[a[i].q].fv[k]=a[i].v;
			a[a[i].q].fp[k]=a[i].p;
			a[a[i].q].fn++;
		}
	}
}
int main()
{
	init();
	for(int i=1;i<=m;i++)
		if(a[i].q==0)
			for(int j=n;j>=a[i].v;j--)
			{
				f[j]=max(f[j],f[j-a[i].v]+a[i].v*a[i].p);
				if(a[i].fn>=1&&j>=a[i].v+a[i].fv[0])
				  f[j]=max(f[j],f[j-a[i].v-a[i].fv[0]]+a[i].v*a[i].p+a[i].fv[0]*a[i].fp[0]);
				if(a[i].fn>1&&j>=a[i].v+a[i].fv[1])
				  f[j]=max(f[j],f[j-a[i].v-a[i].fv[1]]+a[i].v*a[i].p+a[i].fv[1]*a[i].fp[1]);
				if(a[i].fn>1&&j>=a[i].v+a[i].fv[0]+a[i].fv[1])
				  f[j]=max(f[j],f[j-a[i].v-a[i].fv[0]-a[i].fv[1]]+a[i].v*a[i].p
					+a[i].fv[0]*a[i].fp[0]+a[i].fv[1]*a[i].fp[1]);
			}
	cout<<f[n]<<endl;
	return 0;
}]]></solution>
			<solution language="Pascal"><![CDATA[var
n,m:longint;
newv,newp:array[-1000..maxint] of longint;
v,p,q:array[-1000..maxint] of longint;
f:array[-1000..maxint] of longint;
function calc(k:longint):longint;
var
i,j,x:longint;
begin
x:=1;
newv[1]:=v[k];
newp[1]:=p[k];
for i:=1 to m do
if q[i]=k then
begin
for j:=1 to x do
begin
newv[j+x]:=newv[j]+v[i];
newp[j+x]:=newp[j]+p[i];
end;
x:=x*2;
end;
exit(x);
end;
procedure dp;
var
i,j,k,temp:longint;
begin
fillchar(f,sizeof(f),0);
for i:=1 to m do
begin
if q[i]<>0 then continue;
for j:=n downto 1 do
for k:=1 to calc(i) do
if j>=newv[k] then
if (f[j]<f[j-newv[k]]+newp[k]) then f[j]:=f[j-newv[k]]+newp[k];
end;
end;
procedure init;
var
i:longint;
begin
read(n,m);
for i:=1 to m do
begin
read(v[i],p[i],q[i]);
p[i]:=p[i]*v[i];
end;
end;
begin
init;
dp;
writeln(f[n]);
end.]]></solution>
	</item>
</fps>
