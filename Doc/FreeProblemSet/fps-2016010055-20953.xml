<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[陶陶摘苹果]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<p>
	陶陶家的院子里有一棵苹果树，每到秋天树上就会结出10个苹果。苹果成熟的时候，陶陶就会跑去摘苹果。陶陶有个30厘米高的板凳，当她不能直接用手摘到苹果的时候，就会踩到板凳上再试试。
</p>
<p>
	现在已知10个苹果到地面的高度，以及陶陶把手伸直的时候能够达到的最大高度，请帮陶陶算一下她能够摘到的苹果的数目。假设她碰到苹果，苹果就会掉下来。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每组输入数据包括两行。第一行包含10个100到200之间（包括100和200）的整数（以厘米为单位）分别表示10个苹果到地面的高度，两个相邻的整数之间用一个空格隔开。第二行只包括一个100到120之间（包含100和120）的整数（以厘米为单位），表示陶陶把手伸直的时候能够达到的最大高度。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	每组输出包括一行，这一行只包含一个整数，表示陶陶能够摘到的苹果的数目。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[100 200 150 140 129 134 167 198 200 111
110]]></sample_input>
<sample_output><![CDATA[5]]></sample_output>
  <test_input><![CDATA[166 150 137 156 141 199 184 199 198 177
105
]]></test_input>
<test_output><![CDATA[0
]]></test_output>
<test_input><![CDATA[100 146 178 164 160 122 119 187 150 200
120
]]></test_input>
<test_output><![CDATA[5
]]></test_output>
<test_input><![CDATA[163 175 148 130 173 124 102 121 129 164
106
]]></test_input>
<test_output><![CDATA[5
]]></test_output>
<test_input><![CDATA[182 139 141 106 160 151 148 131 188 184
108
]]></test_input>
<test_output><![CDATA[2
]]></test_output>
<test_input><![CDATA[101 103 134 183 148 135 138 185 145 104
103
]]></test_input>
<test_output><![CDATA[3
]]></test_output>
<test_input><![CDATA[172 157 167 118 167 188 147 126 187 101
103
]]></test_input>
<test_output><![CDATA[3
]]></test_output>
<test_input><![CDATA[195 164 103 176 123 159 175 182 193 179
105
]]></test_input>
<test_output><![CDATA[2
]]></test_output>
<test_input><![CDATA[153 192 174 186 179 104 157 172 128 182
100
]]></test_input>
<test_output><![CDATA[2
]]></test_output>
<test_input><![CDATA[179 198 198 125 148 164 110 129 139 171
101
]]></test_input>
<test_output><![CDATA[3
]]></test_output>
<test_input><![CDATA[189 180 173 170 141 184 111 134 140 109
106
]]></test_input>
<test_output><![CDATA[3
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组-2005年NOIP全国联赛普及组]]></source>
		<solution language="C"><![CDATA[#include<stdio.h>

int main()
{
  int a[10];
  int t,i,count=0;
  for(i=0;i<10;i++)
	  scanf("%d",&a[i]);
  scanf("%d",&t);
  for(i=0;i<10;i++)
  {
      if(t+30>=a[i])
		  count++;
  }
  printf("%d\n",count);
  return 0;
}]]></solution>
			<solution language="C++"><![CDATA[#include<iostream>
using namespace std;
int main()
{
	int a[10],b;
	for(int i=0;i<10;i++)
		cin>>a[i];
	cin>>b;
	int count=0;
	for(int i=0;i<10;i++)
	{
		if(a[i]<=b+30)
			count++;
	}
	cout<<count<<endl;
	return 0;
}]]></solution>
			<solution language="Pascal"><![CDATA[var
i,n,s:integer;
a:array[1..10] of integer;
begin
  for i:=1 to 10 do read(a[i]);
  read(n);
  s:=0;
  for i:=1 to 10 do
    if n+30>=a[i] then s:=s+1;
  write(s);
end.]]></solution>
	</item>
</fps>
