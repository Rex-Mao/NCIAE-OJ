<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[数字游戏]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<img><src><![CDATA[http://tk.hustoj.com:80/attached/image/20140113/20140113154549_88295.jpg]]></src><base64><![CDATA[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]]></base64></img><description><![CDATA[<p>
	丁丁最近沉迷于一个数字游戏之中。这个游戏看似简单，但丁丁在研究了许多天之后却发觉原来在简单的规则下想要赢得这个游戏并不那么容易。游戏是这样的，在你面前有一圈整数（一共n个），你要按顺序将其分为m个部分，各部分内的数字相加，相加所得的m个结果对10取模后再相乘，最终得到一个数k。游戏的要求是使你所得的k最大或者最小。
</p>
<p>
	例如，对于下面这圈数字（n=4，m=2）：
</p>
<p style="text-align:center;">
	<img src="http://tk.hustoj.com:80/attached/image/20140113/20140113154549_88295.jpg" alt="" /> 
</p>
<p style="text-align:left;">
	当要求最小值时，((2-1) mod 10)×((4+3) mod 10)=1×7=7，要求最大值时，为((2+4+3) mod 10)×(-1 mod 10)=9×9=81。特别值得注意的是，无论是负数还是正数，对10取模的结果均为非负值。
</p>
<p style="text-align:left;">
	丁丁请你编写程序帮他赢得这个游戏。
</p>
<p style="text-align:left;">
	<br />
</p>]]></description>
<input><![CDATA[<p>
	输入文件第一行有两个整数，n（1≤n≤50）和m（1≤m≤9）。以下n行每行有个整数，其绝对值不大于104，按顺序给出圈中的数字，首尾相接。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	输出文件有两行，各包含一个非负整数。第一行是你程序得到的最小值，第二行是最大值。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[4 2
4
3
-1
2]]></sample_input>
<sample_output><![CDATA[7
81]]></sample_output>
  <test_input><![CDATA[50 9
-1112 
-6881 
-6929 
-9092 
6009 
-6236 
-7897 
-1870 
7564 
-5562 
8387 
6212 
-8249 
6520 
5748 
3930 
5675 
-3385 
7656 
-4143 
3309 
5142 
3915 
4556 
208 
-1390 
5803 
-4952 
-366 
-967 
6867 
7525 
-197 
-1105 
-8459 
9192 
-3067 
-4866 
-1208 
1238 
3774 
563 
-7038 
1823 
8321 
-3838 
-984 
-8962 
2384 
-7300 

]]></test_input>
<test_output><![CDATA[0
214990848
]]></test_output>
<test_input><![CDATA[4 2
4
3
-1
2
]]></test_input>
<test_output><![CDATA[7
81
]]></test_output>
<test_input><![CDATA[30 5
6940 
-1622 
4366 
-7623 
-1643 
508 
-9181 
-3291 
5459 
8916 
5775 
-1850 
-3557 
-5019 
-6943 
5478 
-1586 
5311 
-3863 
3265 
5345 
322 
4818 
-5928 
-7209 
6526 
-9622 
2925 
4014 
5933 

]]></test_input>
<test_output><![CDATA[0
52488
]]></test_output>
<test_input><![CDATA[50 1
208 
1910 
7959 
32 
5069 
-3749 
472 
-338 
-6341 
-2895 
2659 
2260 
-4570 
2102 
9595 
-7146 
-1267 
4096 
-4000 
-7733 
-1205 
9757 
2928 
-690 
-7583 
-8157 
-7093 
-4743 
4114 
-1381 
-9267 
-3454 
-6650 
8818 
-7907 
6637 
-2406 
5629 
7200 
2965 
-9154 
8113 
-8352 
-59 
2352 
3502 
1653 
-6092 
5170 
8815 

]]></test_input>
<test_output><![CDATA[3
3
]]></test_output>
<test_input><![CDATA[10 3
-5864 
1182 
2731 
2130 
2737 
-4613 
9682 
-3990 
5327 
2090 

]]></test_input>
<test_output><![CDATA[0
392
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组 2003年NOIP全国联赛普及组]]></source>
		<solution language="C"><![CDATA[#include <stdio.h>

int sum[51][51];
int a[51];
int N,M,g;
struct node
{
    int min,max;
}f[10][51];

int Init()
{
    int i;
    scanf("%d%d",&N,&M);
    for (i=1;i<=N;++i)
    {
        scanf("%d",&a[i]);
        a[i]=(a[i]+200000)%10;
    }
}
void Work()
{
    int k,i,j;
    for (i=1;i<=N;++i)
    {
        sum[i][i]=a[i];
        for (j=i;j<=N;++j) sum[i][j]=(sum[i][j-1]+a[j])%10;
        f[1][i].min=f[1][i].max=sum[1][i];
    }
    for (k=2;k<=M;++k)
        for (i=k;i<=N;++i)
        {
            f[k][i].min=g;
            f[k][i].max=0;
            for (j=k-1;j<i;++j)
            {
                if (f[k-1][j].min*sum[j+1][i]<f[k][i].min)
                    f[k][i].min=f[k-1][j].min*sum[j+1][i];
                if (f[k-1][j].max*sum[j+1][i]>f[k][i].max) 
                    f[k][i].max=f[k-1][j].max*sum[j+1][i];
            }
        }
    for (i=0;i<N;++i) a[i]=a[i+1];
    a[N]=a[0];
}
int main()
{
    int i,min,max;
    Init();
    g=(1<<31)-1;
    min=g;
    max=0;
    for (i=0;i<N;++i)
    {
        Work();
        if (min>f[M][N].min) min=f[M][N].min;
        if (max<f[M][N].max) max=f[M][N].max;
    }
    printf("%d\n%d",min,max);
    return 0;
}
]]></solution>
			<solution language="C++"><![CDATA[#include <stdio.h> 
#include <string.h>  
#define MAX 10000000  
#define MIN -10000000  
int line[200],n,m,Min,Max,sum[200];  
int f[200][20];  
int g[200][20]; 
int min(int a,int b)  
{  
    if(a>b)  
        return b;  
    return a;  
}  
int max(int a,int b)  
{  
    if(a>b)  
        return a;  
    return b;  
}  
void dp(int a[])  
{  
    int i,j,k;  
    for(i=1;i<=n;i++)  
        sum[i]=sum[i-1]+a[i];  
    for(i=0;i<=n;i++)  
        for(j=0;j<=m;j++)  
        {  
            f[i][j]=0;  
            g[i][j]=-1u>>1;  
        }  
		for(i=1;i<=n;i++)  
		{  
			f[i][1]=g[i][1]=(sum[i]%10+10)%10;  
		}  
		f[0][0]=1;  
		g[0][0]=1;  
		for(j=2;j<=m;j++)  
		{  
			for(i=j;i<=n;i++)  
			{  
				for(k=j-1;k<i;k++)  
				{  
					{  
						f[i][j]=max(f[i][j],f[k][j-1]*(((sum[i]-sum[k])%10+10)%10));  
						g[i][j]=min(g[i][j],g[k][j-1]*(((sum[i]-sum[k])%10+10)%10));  
					}  
				}  
			}  
		}  
		Max=max(Max,f[n][m]);  
		Min=min(Min,g[n][m]);  
}  
int main()  
{  
    int i,j,k;  
    Max=0;  
    Min=-1u>>1;  
    scanf("%d%d",&n,&m);  
    for(i=1;i<=n;i++)  
    {  
        scanf("%d",&line[i]);  
        line[i+n]=line[i];  
    }  
    for(i=0;i<n;i++)  
        dp(line+i);  
    printf("%d\n%d\n",Min,Max);  
    return 0;  
}  ]]></solution>
			<solution language="Pascal"><![CDATA[var
    a,atmp:array[0..50] of longint;
    f:array[0..9,0..50] of longint;
    n,m,i:longint;
function g(a,b:longint):longint;
var
    i:longint;
begin
    g:=0;
    for i:=a to b do
        if atmp[i]>0 then g:=g+atmp[i]
        else g:=g+atmp[i];
    g:=(g+100000) mod 10;
end;
procedure question_min;
var
    t,i,j,k,tmp,min:longint;
begin
    min:=maxlongint;
    for t:=1 to n do
    begin
        for i:=1 to n do atmp[i]:=a[(i+t-1) mod n];
        atmp[n-t+1]:=a[n];f[0,1]:=atmp[1];
        for i:=1 to n do f[0,i]:=g(1,i);
        for i:=1 to m-1 do
            for j:=i+1 to n do
            begin
                f[i,j]:=maxlongint;
                for k:=i to j-1 do
                begin
                    tmp:=g(k+1,j);
                    if f[i,j]>tmp*f[i-1,k] then f[i,j]:=tmp*f[i-1,k];
                end;
            end;
        if f[m-1,n]<min then min:=f[m-1,n];
    end;
    writeln(min);
end;
procedure question_max;
var
    t,i,j,k,tmp,max:longint;
begin
    max:=0;
    for t:=1 to n do
    begin
        for i:=1 to n do atmp[i]:=a[(i+t-1) mod n];
        atmp[n-t+1]:=a[n];f[0,1]:=atmp[1];
        for i:=1 to n do f[0,i]:=g(1,i);
        for i:=1 to m-1 do
            for j:=i+1 to n do
            begin
                f[i,j]:=0;
                for k:=i to j-1 do
                begin
                    tmp:=g(k+1,j);
                    if f[i,j]<tmp*f[i-1,k] then f[i,j]:=tmp*f[i-1,k];
                end;
            end;
        if f[m-1,n]>max then max:=f[m-1,n];
    end;
    writeln(max);
end;
begin
    readln(n,m);
    for i:=1 to n do readln(a[i]);
    question_min;
    question_max;
end.
]]></solution>
	</item>
</fps>
