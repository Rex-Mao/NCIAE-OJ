<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[ 数的计算]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[我们要求找出具有下列性质数的个数（包含输入的自然数n）：<br />
<p>
	<span style="line-height:1.5;">先输入一个自然数n（n&lt;=1000），然后对此自然数按照如下方法进行处理：</span> 
</p>
<p>
	1. 不作任何处理；
</p>
2. 在它的左边加上一个自然数，但该自然数不能超过原数的一半；<br />
<p>
	3. 加上数后，继续按此规则进行处理，直到不能再加自然数为止。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每个测试文件只包含一组测试数据，每组输入一个自然数n（n&lt;=1000）。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出经过处理后的n的结果。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[6]]></sample_input>
<sample_output><![CDATA[6]]></sample_output>
  <test_input><![CDATA[100
]]></test_input>
<test_output><![CDATA[9828
]]></test_output>
<test_input><![CDATA[1
]]></test_input>
<test_output><![CDATA[1
]]></test_output>
<test_input><![CDATA[198
]]></test_input>
<test_output><![CDATA[195830
]]></test_output>
<test_input><![CDATA[10
]]></test_input>
<test_output><![CDATA[14
]]></test_output>
<test_input><![CDATA[50
]]></test_input>
<test_output><![CDATA[786
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组 2001年NOIP全国联赛普及组]]></source>
		<solution language="C"><![CDATA[#include <stdio.h>
int fan(int n)
{int h=1,i;
 i=n/2;
	if(n==1)
  return 1;
else 
  for(;i>=1;i--)
	  h=h+fan(i);
	return h;}
 
int main()
{int n;
scanf("%d",&n);
printf("%d",fan(n));
return 0;
}]]></solution>
			<solution language="C++"><![CDATA[#include <iostream>
using namespace std;
long long f[100001];
long long comp (long long n){
     long long s=1,i;
     for (i=1;i<=n/2;i++){
         if (!f[i])
            f[i]=comp (i);
         s+=f[i];
     }
     return s;
}
int main ()
{
long long n;
cin>>n;
cout<<comp (n);
return 0;
}
]]></solution>
			<solution language="Pascal"><![CDATA[var n,i,j:longint;
    p:array[0..10000]of longint;
begin
 readln(n);
 p[1]:=1;
 for i:=2 to n do
  begin
   for j:=1 to i div 2 do
    p[i]:=p[i]+p[j];
   inc(p[i]);
  end;
 writeln(p[n]);
end.]]></solution>
			<solution language="Java"><![CDATA[import java.util.*;
public class Main{
  public static int cnt = 1;
  public static void main(String[] args) {
  long startTime = System.currentTimeMillis();
    Scanner cin = new Scanner(System.in);
    int n = cin.nextInt();
    recursion(n);

    System.out.println(cnt);
    long endTime = System.currentTimeMillis();
    // System.out.println(endTime-startTime);
  }

  public static void recursion(int n){
    for(int i = 1; i <= n/2; i ++){
      cnt++;
      recursion(i);
    }
  }
}]]></solution>
	</item>
</fps>
