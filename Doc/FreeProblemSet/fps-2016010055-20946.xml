<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[花生采摘]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<img><src><![CDATA[http://tk.hustoj.com:80/attached/image/20140114/20140114150140_87370.jpg]]></src><base64><![CDATA[]]></base64></img><description><![CDATA[鲁宾逊先生有一只宠物猴，名叫多多。这天，他们两个正沿着乡间小路散步，突然发现路边的告示牌上贴着一张小小的纸条：“欢迎免费品尝我种的花生！——熊字”。<br />
<br />
鲁宾逊先生和多多都很开心，因为花生正是他们的最爱。在告示牌背后，路边真的有一块花生田，花生植株整齐地排列成矩形网格（如图1）。有经验的多多一眼就能看出，每棵花生植株下的花生有多少。为了训练多多的算术，鲁宾逊先生说：“你先找出花生最多的植株，去采摘它的花生；然后再找出剩下的植株里花生最多的，去采摘它的花生；依此类推，不过你一定要在我限定的时间内回到路边。”<br />
<br />
<p>
	我们假定多多在每个单位时间内，可以做下列四件事情中的一件：
</p>
<p>
	1) 从路边跳到最靠近路边（即第一行）的某棵花生植株；
</p>
<p>
	2) 从一棵植株跳到前后左右与之相邻的另一棵植株；
</p>
<p>
	3) 采摘一棵植株下的花生；
</p>
4) 从最靠近路边（即第一行）的某棵花生植株跳回路边。<br />
<br />
现在给定一块花生田的大小和花生的分布，请问在限定时间内，多多最多可以采到多少个花生？注意可能只有部分植株下面长有花生，假设这些植株下的花生个数各不相同。<br />
<br />
例如在图2所示的花生田里，只有位于(2, 5), (3, 7), (4, 2), (5, 4)的植株下长有花生，个数分别为13, 7, 15, 9。沿着图示的路线，多多在21个单位时间内，最多可以采到37个花生。<br />
<p style="text-align:center;">
	<img src="http://tk.hustoj.com:80/attached/image/20140114/20140114150140_87370.jpg" alt="" />
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每组输入数据第一行包括三个整数，M、N和K，用空格隔开；表示花生田的大小为M*N（1&lt;=M,N&lt;=20），多多采花生的限定时间为K（0&lt;=K&lt;=1000）个单位时间。接下来的M行，每行包括N个非负整数，也用空格隔开；第i+1行的第j个整数Pij（0&lt;=Pij&lt;=500）表示花生田里植株(i, j)下花生的数目，0表示该植株下没有花生。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	每组输出包括一行，这一行只包含一个整数，即在限定时间<span style="line-height:1.5;">内，多多最多可以采到花生的个数。</span>
</p>
<p>
	<span style="line-height:1.5;"><br />
</span>
</p>]]></output>
<sample_input><![CDATA[6 7 21
0 0 0 0 0 0 0
0 0 0 0 13 0 0
0 0 0 0 0 0 7
0 15 0 0 0 0 0
0 0 0 9 0 0 0
0 0 0 0 0 0 0

6 7 20
0 0 0 0 0 0 0
0 0 0 0 13 0 0
0 0 0 0 0 0 7
0 15 0 0 0 0 0
0 0 0 9 0 0 0
0 0 0 0 0 0 0]]></sample_input>
<sample_output><![CDATA[37

28]]></sample_output>
  <test_input><![CDATA[6 7 20
0 0 0 0 0 0 0
0 0 0 0 13 0 0
0 0 0 0 0 0 7
0 15 0 0 0 0 0
0 0 0 9 0 0 0
0 0 0 0 0 0 0
]]></test_input>
<test_output><![CDATA[28
]]></test_output>
<test_input><![CDATA[20 20 400
0 182 0 324 64 24 0 354 0 0 156 344 0 0 0 0 346 0 34 0
0 0 0 378 0 302 0 0 276 0 16 0 218 216 326 0 306 0 270 168
0 190 0 0 22 128 0 0 296 340 348 0 376 174 102 0 0 372 18 100
0 86 286 110 274 118 0 0 30 360 94 0 10 338 0 212 240 0 210 114
2 0 150 0 0 0 0 0 186 358 0 0 308 224 396 398 0 0 244 0
180 0 56 0 0 66 122 388 172 0 0 0 0 0 0 294 0 0 0 14
268 384 0 170 266 0 0 0 0 0 0 0 0 362 0 0 6 0 0 0
394 0 0 364 0 0 0 0 60 0 0 332 0 0 0 0 0 374 0 282
226 88 134 106 0 200 196 0 0 0 32 230 0 144 214 76 46 284 0 0
140 0 0 0 72 0 96 314 250 316 0 154 0 0 206 0 0 318 0 132
90 38 0 368 160 26 0 0 44 194 280 382 138 0 334 188 242 0 238 0
0 0 0 84 158 380 258 202 0 248 4 68 0 232 80 178 28 0 246 322
0 0 0 300 0 54 0 0 0 0 0 254 0 0 236 0 0 228 204 0
0 0 0 278 304 0 164 0 312 0 0 264 62 124 0 0 320 0 0 104
208 198 0 98 0 356 0 12 0 352 126 0 0 0 262 120 0 82 0 288
148 252 0 0 74 392 0 78 0 0 330 92 192 0 0 0 50 36 298 0
0 0 0 370 366 0 0 256 184 0 386 0 116 0 112 8 290 0 176 130
70 152 58 166 162 0 142 0 272 0 0 234 0 0 0 48 328 0 350 0
0 292 0 40 0 0 222 390 0 0 0 0 260 0 310 0 0 0 220 0
0 0 136 0 342 336 42 0 0 0 108 0 146 20 0 0 0 52 0 0
]]></test_input>
<test_output><![CDATA[11408
]]></test_output>
<test_input><![CDATA[10 10 200
0 0 64 24 0 0 0 34 0 16
0 0 22 0 18 86 0 30 94 10
2 0 0 0 0 56 0 66 0 0
14 0 6 0 0 0 60 0 0 0
88 0 32 76 46 0 0 72 96 0
0 90 38 26 44 0 0 84 4 68
80 28 0 0 0 54 0 0 62 0
98 12 0 0 82 74 78 0 92 50
36 0 0 0 8 70 58 0 0 48
40 0 0 0 0 42 20 0 52 0
]]></test_input>
<test_output><![CDATA[1988
]]></test_output>
<test_input><![CDATA[10 10 500
82 89 56 31 59 83 7 95 35 68
90 87 28 67 74 2 81 0 10 18
15 14 61 50 65 97 86 80 45 22
72 99 47 5 70 43 73 39 29 41
53 21 34 6 96 91 44 40 17 27
54 19 32 60 94 38 88 49 23 58
13 78 63 64 33 24 9 93 4 98
77 26 20 75 48 69 79 92 25 51
84 16 12 76 30 52 66 62 42 85
11 55 3 37 71 36 1 8 46 57
]]></test_input>
<test_output><![CDATA[4389
]]></test_output>
<test_input><![CDATA[1 1 5
15
]]></test_input>
<test_output><![CDATA[15
]]></test_output>
<test_input><![CDATA[20 20 1000
374 94 46 27 38 227 332 268 311 386 247 393 398 328 244 192 248 62 127 100
331 14 384 156 208 218 238 389 2 346 15 69 221 377 51 198 130 133 315 191
259 190 13 86 3 300 48 66 352 378 189 338 6 206 83 369 182 96 275 303
11 175 43 196 58 383 71 10 116 330 104 382 135 79 220 373 297 88 314 279
150 291 102 308 108 129 284 134 201 145 176 184 325 92 224 78 44 324 271 322
9 80 31 394 103 294 101 33 124 7 26 348 158 293 269 177 316 70 327 243
157 74 358 242 194 304 167 222 98 225 16 341 270 335 267 385 333 233 126 170
370 193 76 180 320 273 216 45 379 241 168 217 131 246 148 395 164 197 142 125
165 25 18 30 232 252 97 159 336 337 47 119 5 349 372 392 19 36 187 228
368 140 85 153 137 113 249 93 261 210 347 306 299 226 351 229 181 185 81 367
4 28 56 213 22 344 280 123 121 0 205 339 207 67 319 239 353 264 118 345
169 305 152 42 122 257 32 263 262 132 144 258 40 138 230 254 245 203 292 73
105 236 154 290 277 117 391 323 334 136 64 360 110 388 312 396 186 204 111 375
342 49 53 115 266 199 317 214 178 380 34 141 57 188 59 54 313 215 24 202
77 195 139 340 65 155 354 161 298 200 276 253 309 212 60 162 295 171 173 174
172 361 95 231 307 363 329 272 376 90 61 355 321 109 282 397 87 223 41 296
260 128 286 55 301 381 255 219 52 265 371 399 362 143 21 318 23 234 288 357
50 302 250 350 240 356 359 63 274 91 364 256 147 343 106 37 289 8 278 160
151 163 285 281 82 84 166 183 365 112 179 366 390 17 114 75 12 251 107 39
235 120 35 20 68 146 287 29 283 211 326 89 209 387 72 1 149 99 310 237
]]></test_input>
<test_output><![CDATA[25844
]]></test_output>
<test_input><![CDATA[3 1 6
12
14
15
]]></test_input>
<test_output><![CDATA[0
]]></test_output>
<test_input><![CDATA[3 2 8
0 0
0 1
2 0
]]></test_input>
<test_output><![CDATA[2
]]></test_output>
<test_input><![CDATA[3 2 9
0 0
0 1
2 0
]]></test_input>
<test_output><![CDATA[3
]]></test_output>
<test_input><![CDATA[6 7 21
0 0 0 0 0 0 0
0 0 0 0 13 0 0
0 0 0 0 0 0 7
0 15 0 0 0 0 0
0 0 0 9 0 0 0
0 0 0 0 0 0 0
]]></test_input>
<test_output><![CDATA[37
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组-2004年NOIP全国联赛普及组]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;
struct node{
    int x,y;
    int dis_y;
    int value;
    int dis_next;
} loc[1005];
int m,n,k;
int cmp(node a,node b)
{
    return a.value>b.value;
}
int main()
{
    int i,j,time;
    int num;
    int ans;
    while(~scanf("%d%d%d",&m,&n,&k))
    {
        num=1;
        time=k;
        ans=0;
        int a;
        for(i=1; i<=m; i++)
            for(j=1; j<=n; j++)
            {
                scanf("%d",&a);
                if(a!=0)
                {
                    loc[num].value=a;
                    loc[num].dis_y=loc[num].x=i;
                    loc[num++].y=j;
                }
            }
        sort(loc+1,loc+num,cmp);
        loc[1].dis_next=loc[1].x;
        for(i=2; i<num; i++)
            loc[i].dis_next=abs(loc[i].x-loc[i-1].x)+abs(loc[i].y-loc[i-1].y);
        int t=1;
         while(time>=loc[t].dis_y+loc[t].dis_next+1)
         {
             ans=ans+loc[t].value;
             time=time-1-loc[t].dis_next;
             t++;
         }
         cout<<ans<<endl;
    }
    return 0;
}
]]></solution>
			<solution language="Pascal"><![CDATA[var p:array[1..20,1..20] of longint;
    n,m,k,t,i,j,ans,max,maxli,maxlj,maxi,maxj:longint;
begin
  readln(m,n,k);
  for i:=1 to m do
    for j:=1 to n do
       read(p[i,j]);
  k:=k-2;t:=0;ans:=0;max:=0;
  for i:=1 to m do
    for j:=1 to n do
      if p[i,j]>max then
        begin
          max:=p[i,j];maxi:=i;maxj:=j;
        end;
  t:=t+maxi;
  while (t+maxi-1<=k)and(max>0) do
    begin
      ans:=ans+max;
      p[maxi,maxj]:=0;
      max:=0;
      for i:=1 to m do
        for j:=1 to n do
          if p[i,j]>max then
            begin
              max:=p[i,j];
              maxli:=i;
              maxlj:=j;
            end;
      t:=t+1+abs(maxli-maxi)+abs(maxlj-maxj);
      maxi:=maxli;
      maxj:=maxlj;
    end;
  writeln(ans);
end.]]></solution>
	</item>
</fps>
