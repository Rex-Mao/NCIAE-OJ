<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[ISBN号码]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[50]]></memory_limit>

<description><![CDATA[<p>
	每一本正式出版的图书都有一个ISBN号码与之对应，ISBN码包括9位数字、1位识别码和3位分隔符，其规定格式如“x-xxx-xxxxx-x”，其中符号“-”是分隔符（键盘上的减号），最后一位是识别码，例如0-670-82162-4就是一个标准的ISBN码。ISBN码的首位数字表示书籍的出版语言，例如0代表英语；第一个分隔符“-”之后的三位数字代表出版社，例如670代表维京出版社；第二个分隔之后的五位数字代表该书在出版社的编号；最后一位为识别码。
</p>
<p>
	<span style="line-height:1.5;">识别码的计算方法如下：</span>
</p>
<p>
	<span style="line-height:1.5;">首位数字乘以1加上次位数字乘以2...以此类推，用所得的结果mod 11，所得的余数即为识别码，如果余数为10，则识别码为大写字母X。例如ISBN号码0-670-82162-4中的识别码4是这样得到的：对067082162这9个数字，从左至右，分别乘以1，2，...，9，再求和，即0×1+6×2+...+2×9=158，然后取158 mod 11的结果4作为识别码。</span>
</p>
<p>
	你的任务是编写程序判断输入的ISBN号码中识别码是否正确，如果正确，则仅输出“Right”；如果错误，则输出你认为是正确的ISBN号码。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每组输入数据只有一行，是一个字符序列，表示一本书的ISBN号码（保证输入符合ISBN号码的格式要求）。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	每组输出共一行，假如输入的ISBN号码的识别码正确，那么输出“Right”，否则，按照规定的格式，输出正确的ISBN号码（包括分隔符“-”）。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[0-670-82162-4

0-670-82162-0]]></sample_input>
<sample_output><![CDATA[Right

0-670-82162-4]]></sample_output>
  <test_input><![CDATA[2-462-87674-7
]]></test_input>
<test_output><![CDATA[2-462-87674-X
]]></test_output>
<test_input><![CDATA[7-115-13880-4
]]></test_input>
<test_output><![CDATA[7-115-13880-X
]]></test_output>
<test_input><![CDATA[0-670-82162-X
]]></test_input>
<test_output><![CDATA[0-670-82162-4
]]></test_output>
<test_input><![CDATA[0-670-82162-4
]]></test_input>
<test_output><![CDATA[Right
]]></test_output>
<test_input><![CDATA[7-358-86245-2

]]></test_input>
<test_output><![CDATA[7-358-86245-7
]]></test_output>
<test_input><![CDATA[8-739-25436-X
]]></test_input>
<test_output><![CDATA[8-739-25436-4
]]></test_output>
<test_input><![CDATA[0-670-82162-3
]]></test_input>
<test_output><![CDATA[0-670-82162-4
]]></test_output>
<test_input><![CDATA[6-670-82162-X

]]></test_input>
<test_output><![CDATA[Right
]]></test_output>
<test_input><![CDATA[6-670-82162-9
]]></test_input>
<test_output><![CDATA[6-670-82162-X
]]></test_output>
<test_input><![CDATA[7-115-13880-X
]]></test_input>
<test_output><![CDATA[Right
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组-2008年NOIP全国联赛普及组]]></source>
		<solution language="C"><![CDATA[#include<stdio.h>
#include<string.h>
#define N 15
int main()
{
    char a[N];
    int aa[10],j,i,sum=0,flag=0;
    scanf("%s",a);
    j=0;
    for(i=0;a[i]!='\0';i++){
        if(a[i]!='-'){
            aa[j++]=a[i]-'0';
        }
    }
    for(i=0;i<9;i++){
  //      printf("%d ",aa[i]);
        sum+=((i+1)*aa[i]);
    }
 //   printf("\n");
    if(sum%11==10 && a[12]=='X'){
        printf("Right");
        printf("\n");
        flag=1;
    }
    else if(sum%11==aa[9]){
        printf("Right");
        printf("\n");
        flag=1;
    }
    if(sum%11!=aa[9] && flag==0){
        for(i=0;i<12;i++) printf("%c",a[i]);
        if((sum%11)==10){
            printf("X\n");
        }
        else{
            printf("%c\n",(sum%11)+'0');
        }
    }
//    printf("%d %d\n",sum,sum%11);
//    printf("\n");
    return 0;
}
]]></solution>
			<solution language="C++"><![CDATA[#include <iostream>
using namespace std;
int main()
{
	char a[15];
	int s[15];
	int sum=0,sb;
	cin.getline(a,14);
	s[1]=a[0]-'0';
	s[2]=a[2]-'0';
	s[3]=a[3]-'0';
	s[4]=a[4]-'0';
	s[5]=a[6]-'0';
	s[6]=a[7]-'0';
	s[7]=a[8]-'0';
	s[8]=a[9]-'0';
	s[9]=a[10]-'0';
	s[10]=a[12]-'0';
	for (int i=1;i<=9;i++){
		sum+=s[i]*i;
	}
		sb=sum%11;
	if (sb==10){
		if (a[12]=='X')
			cout<<"Right"<<endl;
		else{
			a[12]='X';
			for(int i=0;i<13;i++)
				cout<<a[i];
			cout<<endl;
		}
	}
	else{
	
	if (sb==s[10]){
		cout<<"Right"<<endl;
	}
	else{
		s[10]=sb;
		a[12]=s[10]+'0';
		for(int i=0;i<13;i++)
			cout<<a[i];
		cout<<endl;
	}
}
	return 0;
}]]></solution>
			<solution language="Pascal"><![CDATA[var ans,i,x:longint;s:string;
begin
  readln(s);
  for i:=1 to length(s) do
    if (s[i]>='0')and(s[i]<='9') then
      if x<>9 then begin x:=x+1;ans:=ans+x*(ord(s[i])-48);end;
  if ans mod 11=10
    then if s[i]='X' then
      begin
        writeln('Right');
        halt;
      end
         else
           begin
             delete(s,length(s),1);
             s:=s+'X';
             writeln(s);
             halt;
           end;
  if ans mod 11=ord(s[length(s)])-48 then writeln('Right')
  else
    begin
      delete(s,length(s),1);
      s:=s+chr(ans mod 11+48);
      writeln(s);
      halt;
    end;
end.]]></solution>
			<solution language="Java"><![CDATA[import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {
	public static void main(String args[]) throws Exception {

		Scanner scanner = new Scanner(System.in);
		while (scanner.hasNextLine()) {

			// 输入识别码
			String str = scanner.nextLine();
			String[] numstr = str.split("-");
			List<Integer> valList = new ArrayList<Integer>();

			for (int i = 0; i < numstr.length - 1; i++) {
				for (int j = 0; j <= numstr[i].length() - 1; j++) {
					valList.add(Integer.parseInt(numstr[i].substring(j, j + 1)));
				}
			}

			int[] Array = new int[valList.size()];
			for (int i = 0; i < valList.size(); i++) {
				Array[i] = valList.get(i);
			}

			// 输出结果
			fun(Array, numstr[numstr.length - 1]);
			break;
		}
	}

	public static void fun(int Array[], String lastOne) {
		int sum = 0;
		for (int i = 0; i < Array.length; i++) {
			sum += Array[i] * (i + 1);
		}
		String code = String.valueOf(sum % 11);
		if (code.equals("10")) {
			code = "X";
		}
		if (code.equals(lastOne)) {
			System.out.println("Right");
		} else {
			System.out.println(Array[0] + "-" + Array[1] + Array[2] + Array[3]
					+ "-" + Array[4] + Array[5] + Array[6] + Array[7]
					+ Array[8] + "-" + code);
		}

	}
}
]]></solution>
	</item>
</fps>
