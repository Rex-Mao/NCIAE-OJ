<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[转圈游戏（Day 1）]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>
	n个小伙伴（编号从0到n-1）围坐一圈玩游戏。按照顺时针方向给n个位置编号，从0到n-1。最初，第0号小伙伴在第0号位置，第1号小伙伴在第1号位置，...，依此类推。
</p>
<p>
	游戏规则如下：每一轮第0号位置上的小伙伴顺时针走到第m号位置，第1号位置小伙伴走到第m+1号位置，...，依此类推，第n−m号位置上的小伙伴走到第0号位置，第n-m+1号位置上的小伙伴走到第1号位置，...，第n-1号位置上的小伙伴顺时针走到第m-1号位置。
</p>
<p>
	现在，一共进行了10<sup>k</sup>轮，请问x号小伙伴最后走到了第几号位置。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每组输入数据共1行，包含4个整数n、m、k、x，每两个整数之间用一个空格隔开。
</p>
<p>
	<br />
</p>
<p>
	数据规模：
</p>
<p>
	对于30%的数据，0&lt;k&lt;7；
</p>
<p>
	对于80%的数据，0&lt;k&lt;10<sup>7</sup>；
</p>
<p>
	对于100%的数据，1&lt;n&lt;1,000,000，0&lt;m&lt;n，0≤x&lt;n，0&lt;k&lt;10<sup>9</sup>。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	每组输出共1行，包含1个整数，表示10<sup>k</sup>轮后x号小伙伴所在的位置编号。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[10 3 4 5]]></sample_input>
<sample_output><![CDATA[5]]></sample_output>
  <test_input><![CDATA[28956 983 3 8211
]]></test_input>
<test_output><![CDATA[6707
]]></test_output>
<test_input><![CDATA[22872 4435 378363 10474
]]></test_input>
<test_output><![CDATA[7178
]]></test_output>
<test_input><![CDATA[25090 6136 180222 3933
]]></test_input>
<test_output><![CDATA[10693
]]></test_output>
<test_input><![CDATA[10275 8503 220059 8425
]]></test_input>
<test_output><![CDATA[3725
]]></test_output>
<test_input><![CDATA[361 226 242242144 34
]]></test_input>
<test_output><![CDATA[83
]]></test_output>
<test_input><![CDATA[29221 6118 30423181 11728
]]></test_input>
<test_output><![CDATA[648
]]></test_output>
<test_input><![CDATA[8776 898 14964 5981
]]></test_input>
<test_output><![CDATA[5725
]]></test_output>
<test_input><![CDATA[27014 22606 6 22106
]]></test_input>
<test_output><![CDATA[4542
]]></test_output>
<test_input><![CDATA[28632 17437 145309 14828
]]></test_input>
<test_output><![CDATA[16812
]]></test_output>
<test_input><![CDATA[28798 1615 4 17563
]]></test_input>
<test_output><![CDATA[11885
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛提高组-2013年NOIP全国联赛提高组]]></source>
		<solution language="C"><![CDATA[#include<stdio.h>
#include<stdlib.h>
long long ab(int k,int n)
{
    long long t,p;
    if(k==0) return 1;
    t=ab(k/2,n);
    p=(t*t)%n;
    if(k%2==0) return p;
    return (p*(10%n))%n;
}
int main()
{
    int n,m,x,k;
    long long s,q;
    while(scanf("%d%d%d%d",&n,&m,&k,&x)!=EOF)
    {
    s=ab(k,n);
    q=(x%n+(s*(m%n))%n)%n;
    printf("%lld\n",q);
    }
    return 0;
}]]></solution>
			<solution language="C++"><![CDATA[#include<stdio.h>
long long ab(int k,int n)
{
     long long t;
     if(k==0)return 1;
     if(k==1)return 10%n;
     t=ab(k/2,n);
     if(k%2==0)return (t*t)%n;
     return (((t*t)%n)*(10%n))%n;
}
int main()
{
    int n,m,k,x;
    long long a;
    while(scanf("%d%d%d%d",&n,&m,&k,&x)!=EOF)
    {
    a=ab(k,n);
    printf("%lld\n",(x%n+(a*(m%n))%n)%n);
    }
return 0;
}
]]></solution>
			<solution language="Pascal"><![CDATA[var n,m,k,x:longint;
base,t:int64; 
begin 
readln(n,m,k,x); 
base:=10; t:=1; 
while k>0 do begin
if k and 1=1 then t:=t*base mod n; 
base:=base*base mod n; 
k:=k>>1; 
end; 
writeln((x+m*t) mod n); 
end.
]]></solution>
	</item>
</fps>
