<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[「ZJOI2016」线段树]]></title>
<time_limit unit="s"><![CDATA[4]]></time_limit>
<memory_limit unit="mb"><![CDATA[256]]></memory_limit>

<description><![CDATA[<div class="ui bottom attached segment font-content">
	<div>
		<p>
			小 Yuuka 遇到了一个题目：有一个序列 <span class="katex"><span class="katex-mathml">a1,a2,…,ana_1, a_2, \ldots , a_n</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="mpunct">,</span><span class="minner">…</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span></span></span></span>，对其进行<span class="katex"><span class="katex-mathml">qq</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">q</span></span></span></span>次操作，每次把一个区间内的数改成区间内的最大值，问最后每个数是多少。
		</p>
		<p>
			小 Yuuka 很快地就使用了线段树解决了这个问题。于是充满智慧的小 Yuuka 想，如果操作是随机的，即在这 <span class="katex"><span class="katex-mathml">qq</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">q</span></span></span></span> 次操作中每次等概率随机地选择一个区间 <span class="katex"><span class="katex-mathml">[l,r][l,r]</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">l</span><span class="mpunct">,</span><span class="mord mathit">r</span><span class="mclose">]</span></span></span></span> <span class="katex"><span class="katex-mathml">(1≤l≤r≤n)(1 \leq l \leq r \leq n)</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">(</span><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">l</span><span class="mrel">≤</span><span class="mord mathit">r</span><span class="mrel">≤</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span>，然后将这个区间内的数改成区间内最大值（注意这样的区间共有 <span class="katex"><span class="katex-mathml">n(n+1)2\frac{n(n+1)}{2}</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span> 个），最后每个数的期望大小是多少呢？小 Yuuka 非常热爱随机，所以她给出的输入序列也是随机的（随机方式见数据规模和约定）。对于每个数，输出它的期望乘 <span class="katex"><span class="katex-mathml">(n(n+1)2)q(\frac{n(n+1)}{2})^q</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mopen">(</span><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">n</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">q</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span></span></span></span> 再对 <span class="katex"><span class="katex-mathml">109+710^9+7</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="mbin">+</span><span class="mord mathrm">7</span></span></span></span> 取模的值。
		</p>
	</div>
</div>]]></description>
<input><![CDATA[<div class="ui bottom attached segment font-content">
	<div>
		<p>
			第一行包含两个正整数 <span class="katex"><span class="katex-mathml">n,qn,q</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mpunct">,</span><span class="mord mathit">q</span></span></span></span>，表示序列里数的个数和操作的个数。
		</p>
		<p>
			接下来一行，包含 <span class="katex"><span class="katex-mathml">nn</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span> 个非负整数 <span class="katex"><span class="katex-mathml">a1,a2,…,ana_1, a_2, \ldots, a_n</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span><span class="mpunct">,</span><span class="minner">…</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span></span></span></span>。
		</p>
	</div>
</div>]]></input> 
<output><![CDATA[<div class="ui bottom attached segment font-content">
	<div>
		<p>
			输出共一行，包含 <span class="katex"><span class="katex-mathml">nn</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span> 个整数，表示每个数的答案
		</p>
	</div>
</div>]]></output>
<sample_input><![CDATA[5 5
1 5 2 3 4]]></sample_input>
<sample_output><![CDATA[3152671 3796875 3692207 3623487 3515626]]></sample_output>
  <test_input><![CDATA[100 400
205461216 522648155 862486941 233446938 844043949 262249860 85455944 288399138 371858466 935403922 581276320 521211467 701082957 358317936 229077795 680291549 565767034 107776612 421559368 281246183 102863250 495169609 957897372 522854399 5906033 878474530 679102412 396162430 995015713 457027671 123238312 220390428 266943829 210328005 201838205 239861516 516717646 6426697 787005115 569747918 684289738 12369479 577679395 833628494 89902789 581788658 919957913 735237340 545163604 937354374 849572868 241987470 574637947 280617342 553594702 813834242 716038117 827300618 180864000 790508594 389167412 801964311 671673887 239360604 745466885 207726484 812305327 667795505 162179340 185314848 146494128 830272255 898382972 757178753 763879030 319789371 40703951 265837903 525016355 651464510 957042122 914750364 701182599 687468032 454392991 521471563 365495337 671957819 211217635 263618164 407019656 118548858 363768303 899993679 912985386 785862410 831314438 410449847 798385327 501040612]]></test_input>
<test_output><![CDATA[493525732 995729856 995658846 853176291 532157626 347145260 689155573 509848496 16991913 116406883 921314485 264737344 189376093 849759938 71542991 196014838 463477092 388870933 982570432 135168968 85013949 861062509 477508625 625758211 640875815 545437111 33480610 137178059 714278303 635860654 927561784 891390520 476211416 889648243 299506873 265619010 629342121 969108609 730842130 646949794 935246778 871786467 978507265 761195282 98238269 581111445 786734825 701919787 832690569 52548172 719032873 594863746 234069916 652325700 143608417 842474325 849612802 661212922 933402028 97682916 248704924 863144633 529111706 737705612 291636580 375006094 966191392 764861478 398376292 159725768 428080034 373740465 802931988 640149131 590811389 639486290 881716475 657078181 1999827 608866058 742315650 390672037 494917014 522008345 973590940 317903106 583554255 934991822 95584064 640738524 179802847 308281897 500479159 404430037 907103631 487649563 192328263 179834031 650630819 599157779
]]></test_output>
<test_input><![CDATA[400 400
test_input>
<test_output><![CDATA[968138392 455719681 154394848 644817604 820743994 253134870 670382261 87500363 654873113 199288623 92648023 207118844 70704773 439935007 228855555 528560645 605253667 86146183 743653176 791615071 569728833 572224177 587831345 813208184 394829306 906309572 715229304 470211149 478117126 806769792 614540408 397287605 702247026 558525391 60776038 123815075 835643565 531626850 862288912 731503109 875856611 886767433 637409043 565215522 503899498 605638574 219478032 440583707 154787473 312619530 792111004 728216736 199400360 626715336 430508615 855991346 390913118 622392138 876659886 831031220 657784384 382560431 903705988 948152847 474158240 783627666 72794575 788589451 626165462 814190605 7252377 388012728 837405127 731249209 265186405 116500012 423972245 466163528 343560210 354467125 109326835 222302453 712098362 72936351 580903467 717705472 384252401 707633772 990565833 413062071 876705024 112201292 476096686 723448154 968255502 692967194 978930705 176538249 585593903 773165924 100554585 953940202 350619999 4105441 410016367 95171747 933729424 88299506 107628138 677106419 846276754 357946658 178199835 543564021 89868235 153902384 824745899 393401819 68165498 238846151 219802666 752246245 207473032 448646515 205891998 418096448 750902179 617046197 428946274 653449452 230200329 825951171 139369344 797970507 703551636 773167016 507056866 250051201 972328626 959856581 819631419 773427423 392875883 147205673 18858518 80270223 503051768 797822736 44957235 884533324 318183415 944935612 591962658 746146479 605442224 262533488 908295563 947614495 279492680 409907922 465072158 298119875 732844642 176568379 633194347 734785922 616459501 559336086 665323539 936993589 997151898 314495560 593014910 413195233 821288163 790653706 172855616 969552186 337217861 824118790 427257983 737176431 452858656 404030162 895615376 687202332 314097061 548804718 260710862 466872323 816139188 328345860 333466314 997260548 725926007 659933130 987384942 808203577 598757286 710548631 234453682 353114477 906699482 202774590 683960652 239903068 774528651 846353890 57989760 85786740 848719737 379074446 606436643 904640410 287103987 495319441 756713208 615829865 429835447 394081202 119577118 583111843 734148421 971201534 860804867 246509929 774660954 155190823 157763419 357625932 648731220 705496070 399568231 107999100 90372626 831745086 139904780 8327490 61001757 431678126 500009633 335566732 360941687 538658887 848109944 77407377 28968353 155955128 983118368 622020443 762542751 266240414 789462231 803923472 862225855 233935968 448709712 552333144 249379041 329168887 943116859 930054270 893761090 144527232 257678235 399050144 867248388 381495577 292780089 545320084 517642161 755953720 935726065 664981022 639778506 849846252 199016244 540266632 926934518 91940350 239753679 753439918 319010487 814787652 605215592 476347434 722272964 733212932 118669711 237024294 511153843 179024104 970269069 49493051 102642703 421604997 307355391 35592396 252495164 458162369 882071583 693897370 429605349 790663431 561599963 1438422 10663876 392414833 182103642 977896094 590479090 703334685 473198249 418302647 73857221 516946566 939298532 518673525 456040128 803667802 755892513 597034106 216152065 300056109 569893163 685301081 38971597 180344382 340378277 771992637 442514457 565991287 201216122 615133561 730737780 365893368 998473343 592486485 563857914 662769041 319919130 440132919 928786623 868393861 735637490 263883113 454333733 569695538 874540017 962909670 491830884 495776035 501450304 942165670 831156447 524316032 28640899 247561831 705980437 123206553 154609676 308890580 61928149 836401357 100198265 858662124 834627899 758485180 429834301 670975247 974028392 51758318 342673615 390459951 842071587 832989272 655531348 672191132 991722642 380865997 400556769 663716435 385764250 220494463 372057905 20335813 385401710 65095533 234324465 876556441 688941554 833901300 996045818 825282648 856151904 695069507 146357598 345934682 710432267 82255515
]]></test_output>
<test_input><![CDATA[400 400
test_input>
<test_output><![CDATA[426129006 237282826 621279509 62452286 130551287 422474322 787699827 442110728 3400831 173204260 353460054 631668700 918675659 156646882 733008327 733688268 793063429 229151277 402970741 927020240 444166323 906589126 329499673 900677315 344341990 684017674 475778468 714361560 284419649 999723375 76811769 443857529 195713108 12073253 13394527 393322524 358532119 54334858 24782435 994819550 386278730 380278495 958101640 4568670 298146874 918074408 293156680 426478524 906939875 302719464 517359376 599690600 703780911 185209269 677590885 589063436 973527181 740197399 212011639 570477254 647114143 163349442 579975660 517808886 802511341 417649881 603216873 297653602 984623999 407194442 74305243 972288147 496337369 682942209 284989125 505116144 377980961 129162184 60290125 532893654 84965589 949870473 796110233 155533668 117966990 150316734 976017252 734597239 626664350 3396723 125052663 462601428 765825561 565431860 961884159 785170066 975751337 476273781 852288150 445666317 926003188 892432896 828013956 918329063 323465682 792723893 846587139 318433675 313361536 351490473 410874300 147546977 166919194 283020649 69495645 355958197 60683734 176494690 164258597 769844685 524150306 866938852 100679655 313017464 644135920 177088576 781645302 728953942 174632017 42723971 912408785 706007029 684029159 926694433 781733841 838136050 182293827 88532861 369507143 836372181 601281095 689718555 371325913 451246248 802149602 322436265 448373318 9152646 241555952 747866054 834573648 210878917 84687647 210328415 372015039 77686809 362019229 657731852 514905680 488557924 205009623 792013196 599551660 949570059 611040019 4168391 242505716 253570057 808926183 232241121 585643603 428413429 527340217 854430421 749294796 174818430 956723947 571837280 491764081 7238240 469289926 537386449 673229748 317149553 829948296 465942969 412000409 462007761 834736757 753992047 789297990 639312995 606644870 990888368 755736314 11095961 814055946 237019818 492331470 817686058 793128119 486485484 481781817 616754218 462560983 271684773 659844417 631353327 238790472 656373355 384951372 573069952 530952867 906367797 483067891 740773997 734191246 974801227 5802039 178271838 717550000 589770226 483092581 536227672 25608657 499939970 503270478 869208847 807378831 144205392 951272734 457909999 311878111 308855616 245005624 608728767 484724374 856792842 885924967 539183342 610959989 516702036 260728322 133230803 715521020 727725946 134839742 501609677 575369845 491782370 557989076 985178149 229962603 573043085 813112452 27173308 408319547 119029771 191818121 325567142 326921710 652814662 547352682 115657114 524883553 586278305 49801835 196401800 296897244 696401258 618203070 789764420 325074346 879632408 337640556 10528391 905281183 385994439 737765638 886361784 121766462 606932658 904487365 459233720 850035272 202287887 699475999 987089125 301599847 631389650 732201394 728964500 353079460 466485429 695756049 268730280 507997448 878329325 687461366 428433770 713428311 966848662 664707858 566577280 572203990 359037537 745106648 524537510 324120381 946755172 238827165 407294210 534971411 944348124 785390173 700368882 371555964 17934947 173281861 769789309 122216710 751199743 800396317 79660066 451321752 69269442 64841505 45714396 981254432 796882870 560690238 106459974 390094485 367536185 944469761 163425074 159374628 479331904 984977521 271186318 377810528 688556595 99226511 762881678 286403899 549950330 139474701 609677899 694435368 43666126 837571859 948379215 985857235 810880284 301110731 673064864 637277957 35057161 570089658 930455548 216205857 263994791 867932712 955598341 844937260 241179782 535994111 755052755 844093248 577872126 569635150 246083890 116548237 535224778 251190978 695540162 913063010 524881083 862015317 19734729 840912573 224261591 204373871 110310670 591230940 874690397 78774743 969625147 756505858 186219207 358673577 514894001 283587360 802851269 541392706 457420523 285546281 59938578 530824785 328022162
]]></test_output>
<test_input><![CDATA[50 400
910803743 912164462 553705700 448436994 692055368 12785313 74343666 596657572 204278008 249420689 12283829 849666473 296923963 476156914 845795434 137543338 720909861 435810396 102505620 672100447 348893359 797505187 86352103 450199118 926600674 365450376 937880768 726875062 833583424 906463960 325493611 372241943 822287181 822529745 319449199 941307573 852309026 30741630 498572445 552037782 270399186 696491060 531158242 521750082 739134555 320622150 416959329 348173222 562994060 963724863]]></test_input>
<test_output><![CDATA[651568031 687470319 158789316 566974591 884818502 115105004 216744029 125932756 981347967 855765635 375837924 670641459 754809539 660338168 327570623 896684754 128763127 980253711 426969767 11433178 703043503 118564550 431088904 86763074 673847220 633745897 438142748 729502963 23359780 644133434 213044517 331560858 174004088 223892693 297104541 545675166 620786487 794970063 904253337 123648347 777747541 370072539 235670756 698939878 873478232 536520493 715246926 888298048 300539246 937714321
]]></test_output>
<test_input><![CDATA[30 400
231802993 655163372 314861357 212108667 808862225 29748096 778893093 795239034 244537043 99512888 739688278 621716754 750055158 436062396 334391047 818933876 257455408 993880865 179262624 91293728 507171541 396749477 562834154 519090703 76211211 446096130 750398368 790810497 582589895 209489587]]></test_input>
<test_output><![CDATA[392645973 914983713 990788962 694253783 248617779 399977992 534900739 802049343 130585100 954021410 921091443 591941160 278539615 327802952 488446697 227347833 523339036 231790260 685800536 176562442 587878957 685872039 690895020 203160073 675299761 39555691 927846827 317547875 872845970 497454073
]]></test_output>
<test_input><![CDATA[100 400
730715553 20593474 897165208 921521683 641549667 417447582 271208996 679110571 36132209 714863315 861590989 863420901 980444352 629978845 815169313 554647767 492714520 431134145 352626807 22611062 689833557 639979196 693463513 576881859 739892865 251006589 132056170 276889225 715365226 409025315 352031841 456895374 653062732 414168084 685648362 724787919 899790998 176292089 274990278 909202457 568066952 573331520 694745684 872387552 771559833 369556648 467688668 332768054 828299546 402046066 510936625 441215639 819345533 391985821 938214902 266047330 328902732 448915435 59118478 930667796 856268916 776736403 244300539 870904354 222283659 422402443 29800747 2423730 30656374 952335441 395097776 997363594 217943891 482266299 91866707 158138494 247200318 398606695 84261625 189558980 732456228 450597914 936053563 208892354 16570724 196618564 343552471 6440322 566377726 173692666 143517215 591064859 146958412 13081679 27787945 278764254 668652640 404350192 21547601 347235435]]></test_input>
<test_output><![CDATA[37255344 223860545 239769044 30950469 285484488 521446715 442243381 117990039 436073061 527113135 611892031 859014976 983688395 859739096 412146819 640099870 520789307 129454437 819804779 434991462 735576301 704935448 871264920 766991509 649877667 94463994 486410797 865099960 536543253 143989284 403485178 531306530 81832370 49191712 56910662 654279323 709633769 476295456 1394517 905620291 746823988 823254053 326106871 998088667 822113837 983207046 840032093 232213789 802975073 70521224 251981263 165645956 23452436 489410858 270053823 79882872 832421418 288040931 967751569 341861021 264231778 211555056 718259343 760719203 971920221 943747635 660109272 888329005 633817199 504968431 421654187 400138837 18478319 146381857 629800953 197646108 609897642 814563972 222191964 455310701 715522204 796176169 340943066 715942072 304039252 945017294 559061840 509999040 142750873 513058934 825711394 875932482 960621475 217042490 532193667 332263656 316341553 4120153 903328897 63031817
]]></test_output>
<test_input><![CDATA[8 400
614955762 836299319 805391502 271803584 779246508 946874165 140366227 909445992]]></test_input>
<test_output><![CDATA[548023716 275366510 158690431 707146199 493342738 356785601 931834441 450735828
]]></test_output>
<test_input><![CDATA[12 400
971346475 963946917 444454491 318143662 685007420 61143719 62749485 880636401 71002474 659777096 524617255 278289268]]></test_input>
<test_output><![CDATA[174821805 553588095 387413015 521954811 176969548 107520550 646465869 194524853 660747788 351668809 328623015 808871844
]]></test_output>
<test_input><![CDATA[400 400
38470323 587834796 181149151 846710898 484978486 313194286 476086734 748718047 882526140 950760967 122354170 778383548 479870055 976089526 446923396 202836162 927043461 170903301 638015249 70462613 496794379 150318157 13259515 525910318 944013939 612990334 864034184 396500272 641888827 916159911 950049715 469404454 115767603 373907814 697183767 757656749 741777890 944272951 926023829 637239298 638509893 187147100 531547393 207279297 131171130 923842926 100497485 698430158 517517721 863001963 58083091 330417709 967947659 380267306 451697606 622630166 639805775 444786223 612295080 881773856 402890937 551899748 849712055 688289464 690724166 981508385 327656643 706009122 792768917 455368973 615722629 549596319 851135344 862230666 1105582 876931822 100160741 449230790 241697683 431777804 909063259 222791613 545262863 850203096 757154414 992353893 940581078 131963164 103329768 835183812 92582785 937794670 967281404 565676342 69916607 38047176 679550830 526914091 750193955 260144028 409008350 156655379 217019717 565579573 363345224 671935577 842107866 823302019 541346971 90407257 322886132 868773964 950892227 540342901 231773206 306660612 634583715 132508143 884082291 727247926 300362057 894734890 641458510 133577494 306378008 966977404 798541669 57699547 603256927 407025890 978668401 525790913 674140918 721388988 191951525 815624825 758511589 584896440 850627470 974121192 954000648 375156261 466780946 691162572 686354935 464256451 655507025 385611646 891239861 913704727 915717052 280511367 838546905 366760915 863331437 909835497 456845571 126353126 815661219 296382431 929479610 739421595 417227062 546558172 383203876 595558605 484366011 439091267 8408750 231144133 531457614 6008060 273515074 710249011 175030956 772166713 928435450 963544670 924831700 331359233 693118180 688422737 865158185 647850050 439251917 67867257 669658055 839172183 114798141 506654412 398627004 150756201 832740636 749639523 929339259 112939122 754945027 540823257 49993950 898426213 1701346 460337305 949140225 694959118 410991736 304369119 767066471 718420796 524318443 204840597 564982980 654794720 381768761 877032210 699847914 497074296 875259674 854788964 88998066 111579992 236133462 121440213 95997952 101437993 644971425 969473504 352889792 434154787 108525822 805750947 434518531 576422965 349993284 907515694 1946493 986099439 263844131 278656188 46796702 854853008 566843525 294031635 508183469 884298993 333862759 395233068 329255358 95787514 97008366 642018451 624869997 969216566 555497081 48395212 884717960 160209935 16030702 43930011 587552922 464850781 854609030 991276978 92427682 437755737 158436627 831897395 922281387 393059739 798902166 691327871 385831942 108727571 930586796 156523955 275118908 751304921 100504611 757263340 350142780 919053847 444913401 4475924 380879274 296575630 794152089 107021775 855786620 581809366 702599594 494523435 695885009 920437691 439206490 95427598 61189182 863772411 230104997 921722674 934859443 945697535 230386762 650633387 769036932 566246345 472432133 458571356 150812224 561575253 474778899 828878498 984220076 198222805 308399578 124915534 173242850 363057935 549535011 236231961 925408612 617430016 69470480 646753081 740326348 835436723 982896297 203529462 850435421 469196631 317618325 252192144 817242292 926409522 936799657 148920829 185228465 471846565 727317046 769863973 653303911 459014770 296039730 18143607 920364691 415893356 626682163 434860834 766996954 354403813 908180096 903636287 501533018 773297649 843876065 176131778 418444020 437103363 30391054 892873274 366934766 483625639 227043394 225758344 947062044 426643420 271651409 596036121 816492714 697386152 200269806 47610557 732873244 892295653 601492105 913192596 889545508 718458077 706635623 551675079 661635510 541352588 77643648 258442109 765096242 658733507 906506422 347504255 246077966 706790811 371473051 267637060 934295251 221701243 598602744 543000632 774143088 340425172 174928427 509552477 239127091 887588142]]></test_input>
<test_output><![CDATA[646146123 772875723 783614424 663547785 224991578 318175345 609560622 978904753 793709059 671257708 254389136 638116423 179594155 739367028 367489236 812961899 422972569 789787885 756353338 902924939 450312709 986346386 994346128 408114290 842700779 442630937 485180165 807743880 926086682 146688170 727326710 239137317 232026532 95590263 330322011 811336411 185504034 998930173 577791874 735714968 195924851 498956479 533410227 669499182 796100175 161404984 487035378 946256671 360183947 504830278 304047588 277208588 134859914 944249951 795909167 292244784 168708863 115255600 28137372 595247100 700272083 60780698 591357776 772087324 11399359 561568298 505190982 896513602 88282080 602930655 348753639 4324454 88562594 350269122 325189178 75846357 175799717 562006004 133719284 859836770 983418657 949179768 109652647 418594640 735522411 758606317 797321770 522104400 285351568 338388862 805166786 558773211 442034388 524633184 903490860 850957742 352383379 54440108 145282712 580605236 309537458 834114614 370064066 981476974 617385930 400540143 245266911 944760775 185957233 83453989 237634697 476904152 778709394 162763397 221759344 327663900 430474036 835254918 318637707 909888701 900088392 106531998 541691090 480186650 41129770 209038147 746308910 877474012 489046804 755309214 95422655 383765451 860364412 159698106 501395884 86013773 563484200 25019813 820605630 95691528 622372389 517974064 588785895 756991755 648221827 539340992 317412071 521433824 363943561 550929170 150356036 883210204 443236208 658126941 963909910 166834146 570953837 331953280 265359834 348214871 202609874 949037325 960420579 720445880 317645257 80014717 180276167 768053585 686431137 947114244 413082986 620498403 496965288 783103103 929588958 853218886 63155275 780522669 184825730 589995242 947736513 551754427 439775319 533424312 688445027 683353041 385763694 821103365 765196551 665945805 898059706 227242784 604082241 417562029 925268798 504142398 133866757 323362437 791947559 393246101 636656061 356229085 66426366 159851691 460190406 451617762 694108447 423917240 266320919 524246772 673646401 593882083 218022119 680087293 405967887 754334898 621026517 590943890 436891790 608160838 199849209 836468582 503396952 413701948 220101711 109517763 460474022 287109869 400570574 474509642 425773717 463103428 713220399 32347306 722068539 192863510 292738670 695780164 665902372 409608109 782225514 176596310 172053079 597737325 510571092 983632256 485407595 889761707 399946603 945656251 884431516 704574909 304826545 960858427 186615716 30564442 431330569 182371545 493256192 409549682 240423015 982490404 74789800 150728460 85197842 431653864 137076378 722445135 849058247 675567807 999438646 124286745 293322493 432134805 951454872 528541196 514518259 300924983 235410002 984065840 249138220 622142949 842766805 273225481 293235060 359037832 355733384 674157296 492569005 842313017 802448302 184607799 649249903 393830594 712906927 549025174 99645563 914045475 471044544 555602384 775757494 284051789 772218322 661417114 685533646 22808902 210079558 744791020 454977916 788967712 401137078 560162530 34508952 321751359 937943431 540886593 936621799 527752800 244843290 837490081 506282590 273654789 876286722 865909866 313310765 344526178 679912225 770148988 176619748 490932968 575449884 664437376 227690050 459358917 796436432 148671334 689482538 519176310 834626118 776977169 50619736 218602905 565960152 141794740 877859102 138222866 397594860 55311914 75464085 758882497 868726022 334775439 117308644 739392801 380850482 156702007 498745785 846191647 116251423 175105489 279255267 128148700 662710070 778244735 444517257 800653167 21820677 584139284 57549442 134476470 351191564 22252145 770028943 565630874 351555423 998483262 252939712 409633669 769132723 117576978 786796788 723315671 176699552 745296908 631997068 95830205 111017284 172106517 815149305 771211800 498457079 984577940 524893203 190758603 909529665 428561030 725123781 346511484 734602700 174669075
]]></test_output>
<test_input><![CDATA[5 5
848274236 769010281 980719447 464370035 767894862]]></test_input>
<test_output><![CDATA[553166117 746383641 824852494 844559284 946269984
]]></test_output>
<hint><![CDATA[<div class="ui bottom attached segment font-content">
	<div>
		<p>
			对于所有的测试数据，保证序列中数的大小不超过 <span class="katex"><span class="katex-mathml">10910^9</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span></span></span></span>，即 <span class="mjx-chtml"><span class="mjx-math"><span class="mjx-mrow"><span class="mjx-msubsup"><span class="mjx-base"><span class="mjx-mi"><span class="mjx-char MJXc-TeX-math-I">a</span></span></span><span class="mjx-sub" style="font-size:70.7%;vertical-align:-0.212em;"><span class="mjx-mi"><span class="mjx-char MJXc-TeX-math-I">i</span></span></span></span><span class="mjx-mo MJXc-space3"><span class="mjx-char MJXc-TeX-main-R">≤</span></span><span class="mjx-msubsup MJXc-space3"><span class="mjx-base"><span class="mjx-mn"><span class="mjx-char MJXc-TeX-main-R">10</span></span></span><span class="mjx-sup" style="font-size:70.7%;vertical-align:0.591em;"><span class="mjx-mn"><span class="mjx-char MJXc-TeX-main-R">9</span></span></span></span></span></span></span>，并且每个数是 <span class="katex"><span class="katex-mathml">00</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">0</span></span></span></span> 到 <span class="katex"><span class="katex-mathml">10910^9</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">9</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;"></span></span></span></span></span></span></span></span> 之间的随机整数。<span class="katex"><span class="katex-mathml">n≤400,&nbsp;q≤400n \leq 400, \ q \leq 400</span><span class="katex-html"><span class="strut"></span><span class="strut bottom" style="vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mrel">≤</span><span class="mord mathrm">4</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord mspace"> </span><span class="mord mathit">q</span><span class="mrel">≤</span><span class="mord mathrm">4</span><span class="mord mathrm">0</span><span class="mord mathrm">0</span></span></span></span>。
		</p>
	</div>
</div>]]></hint>
<source><![CDATA[ZJOI2016 NOIP 省选 高级]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<queue>
#include<set>
#define md double
#define LL long long
using namespace std;
const int N=500;
inline int gi() {
	int w=0;
	bool q=1;
	char c=getchar();
	while ((c<'0'||c>'9') && c!='-') c=getchar();
	if (c=='-') q=0,c=getchar();
	while (c>='0'&&c <= '9') w=w*10+c-'0',c=getchar();
	return q? w:-w;
}
int x[N],v[N];
int f[N][N],G[N],tot[N][N],g[N][N];LL pre[N];
int main()
{
	int n=gi(),m=gi(),i,j,k,t,len,l,r,mid;LL sum;
const int mod=1e9+7;
	for (i=1;i<=n;i++) v[i]=x[i]=gi();
	for (i=1;i<=n;i++) G[i]=G[i-1]+i;
	for (i=1;i<=n;i++) for (j=i;j<=n;j++) tot[i][j]=G[i-1]+G[n-j]+G[j-i+1];
	sort(x+1,x+1+n);len=unique(x+1,x+1+n)-x-1;
	for (i=1;i<=n;v[i++]=l) for (l=1,r=len;l!=r;v[i]<=x[mid=(l+r)>>1]?r=mid:l=mid+1);
	v[0]=v[n+1]=len+1;
	for (t=1;t<=n;t++) {
		for (l=t-1;v[l]<=v[t];l--);
		for (r=t+1;v[r]<=v[t];r++);
		for (i=l;i<=r;i++) for (j=i;j<=r;j++) f[i][j]=0;
		f[++l][--r]=1;
		for (mid=m;mid--;) {
			for (i=l;i<=r;i++) pre[i]=0;
			for (i=l;i<=r;i++) {
				sum=0;
				for (j=r;j>=i;j--) {
					k=f[i][j];
					f[i][j]=(1LL*k*tot[i][j]+sum+pre[j])%mod;
					sum+=1LL*k*(n-j);
					pre[j]+=1LL*k*(i-1);
				}
			}
		}
		for (i=l;i<=r;i++)
			for (j=r,sum=0;j>=i;j--) {
				sum+=f[i][j];
				g[j][v[t]]=(g[j][v[t]]+sum)%mod;
			}
	}
	for (i=1;i<=n;i++) {
		sum=0;k=0;
		for (j=1;j<=len;j++)
			if (g[i][j])
				sum+=1LL*x[j]*(g[i][j]-k),k=g[i][j];
		printf("%d ",int((sum%mod+mod)%mod));
	}
	return 0;
}]]></solution>
	</item>
</fps>
