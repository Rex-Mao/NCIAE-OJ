<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[产生数]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[给出一个整数n（n&lt;10<sup>30</sup>) 和k个变换规则（k&lt;=15）。<br />
<p>
	<span style="line-height:1.5;">规则：</span> 
</p>
<p>
	&nbsp;一位数可变换成另一个一位数：
</p>
<p>
	&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;规则的右部不能为零。
</p>
<p>
	&nbsp;例如：n=234。有规则（k＝2）：
</p>
<p>
	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2-&gt;5
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3-&gt;6</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; 上面的整数234经过变换后可能产生出的整数为（包括原数）：</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;234</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;534</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;264</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;564</span> 
</p>
<p>
	<span style="line-height:1.5;">&nbsp; &nbsp; &nbsp; &nbsp; 共4种不同的产生数</span> 
</p>
<p>
	问题：
</p>
给出一个整数n和k个规则。<br />
<p>
	<span style="line-height:1.5;">求出：</span> 
</p>
<p>
	经过任意次的变换（0次或多次），能产生出多少个不同整数。仅要求输出个数。
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每个测试文件只包含一组测试数据，每组输入的第一行输入两个整数n和k（<span>n&lt;10</span><sup>30</sup>，<span>k&lt;=15</span>）。
</p>
<p>
	接下来k行每行输入一个规则，每个规则由两个整数构成。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出一个整数，表示满足条件的个数。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[234 2
2 5
3 6]]></sample_input>
<sample_output><![CDATA[4]]></sample_output>
  <test_input><![CDATA[123456789 8
1 9
9 1
2 8
8 2
3 7
7 3
4 6
6 4
]]></test_input>
<test_output><![CDATA[256
]]></test_output>
<test_input><![CDATA[6554443333222221111110000000 15
0 1
0 2
0 3
0 4
0 5
0 6
1 2
2 3
3 1
4 5
5 6
6 4
7 8
7 9
1 7
]]></test_input>
<test_output><![CDATA[3427648537559040000000
]]></test_output>
<test_input><![CDATA[12345678901234567890 9
2 1
3 2
4 3
5 4
6 5
7 6
8 7
9 8
0 9
]]></test_input>
<test_output><![CDATA[13168189440000
]]></test_output>
<test_input><![CDATA[1234 3
2 3
3 2
3 5
]]></test_input>
<test_output><![CDATA[9
]]></test_output>
<test_input><![CDATA[11111111111111111111 2
1 2
2 1
]]></test_input>
<test_output><![CDATA[1048576
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组 2002年NOIP全国联赛普及组]]></source>
		<solution language="C++"><![CDATA[#include<stdio.h>   
#include<string.h>   
bool can[10][10];  
int rules[10];  
int ans[1000000];  
int len,n,k;  
char s[100];  
int main()  
{  
	int i,j;
    scanf("%s",s);  
    scanf("%d",&k);  
    for ( i=1;i<=k;++i)  
	{  
		int a,b;  
        scanf("%d%d",&a,&b);  
        can[a][b]=true;  
    }  
    for ( i=0;i<10;++i) can[i][i]=true;  
	for (int k=0;k<10;++k)  
        for ( i=0;i<10;++i)  
            for ( j=0;j<10;++j)  
				can[i][j]=can[i][j]||(can[i][k]&&can[k][j]);  
			for ( i=0;i<10;++i)  
				for (  j=0;j<10;++j)  
					if (can[i][j]) ++rules[i];  
					ans[1]=len=1;  
					for ( i=0;i<strlen(s);++i)  
					{  
						int x=rules[s[i]-'0'];  
						for (  j=1;j<=len;++j) ans[j]*=x;  
						for ( j=1;j<=len;++j)  
						{  
							ans[j+1]+=ans[j]/10;  
							ans[j]%=10;  
						}  
						while (ans[len])  
						{  
							ans[len+1]+=ans[len]/10;  
							ans[len]%=10;  
							++len;  
						}  
					}  
					for ( i=len-1;i>0;--i) printf("%d",ans[i]);
					puts("");
					return 0;  
}]]></solution>
			<solution language="Pascal"><![CDATA[var f:array[0..9,0..9]of boolean;n:string;i,j,k,a,b,t,lena,s:longint;ans:array[-10..50]of longint;ch:char;
begin
  n:='';
  read(ch);
  while ch<>' ' do
    begin
      n:=n+ch;
      read(ch);
    end;
  readln(k);
  for i:=1 to k do
    begin
      read(a,b);
      f[a,b]:=true;
    end;
  for i:=0 to 9 do f[i,i]:=true;
  for k:=0 to 9 do
    for i:=0 to 9 do
      for j:=0 to 9 do
        if f[i,k] and f[k,j] then f[i,j]:=true;
  ans[1]:=1;
  for i:=1 to length(n) do
    begin
      t:=ord(n[i])-48;
      s:=0;
      for j:=0 to 9 do if f[t,j] then inc(s);
      for j:=1 to 40 do ans[j]:=ans[j]*s;
      for j:=1 to 40 do
        begin
          if ans[j]>0 then lena:=j;
          ans[j+1]:=ans[j+1]+ans[j] div 10;
          ans[j]:=ans[j] mod 10;
        end;
    end;
  for i:=lena downto 1 do write(ans[i]);
  writeln;
end.]]></solution>
	</item>
</fps>
