<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[比赛安排]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<description><![CDATA[<p class="MsoNormalIndent" style="text-indent:0cm;">
	设有<span>2<sup>n</sup></span>（<span>n&lt;=6</span>）个球队进行单循环比赛，计划在<span>2<sup> n</sup> – 1</span>天内完成，每个队每天进行一场比赛。设计一个比赛的安排，使在<span>2<sup>n</sup> – 1</span>天内每个队都与不同的对手比赛。
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	例如<span>n=2</span>时的比赛安排：<span></span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp;&nbsp;&nbsp; </span>队<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; 4</span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp;&nbsp;&nbsp; </span>比赛<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1==2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;3==4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</span>一天<span></span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1==3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2==4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>二天<span></span> 
</p>
<p>
	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1==4 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2==3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;三天
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每个测试文件只包含一组测试数据，每组输入数据为一个正整数n（n&lt;=6）。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出比赛安排，从第一天的安排开始，每天占一行，每行开头先输出天号，再输出当天的安排，优先给队伍编号小的队伍安排比赛，具体格式见样例输出。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[2]]></sample_input>
<sample_output><![CDATA[<1>1-2,3-4
<2>1-3,2-4
<3>1-4,2-3]]></sample_output>
  <test_input><![CDATA[1

]]></test_input>
<test_output><![CDATA[<1>1-2
]]></test_output>
<test_input><![CDATA[4

]]></test_input>
<test_output><![CDATA[<1>1-2,3-4,5-6,7-8,9-10,11-12,13-14,15-16
<2>1-3,2-4,5-7,6-8,9-11,10-12,13-15,14-16
<3>1-4,2-3,5-8,6-7,9-12,10-11,13-16,14-15
<4>1-5,2-6,3-7,4-8,9-13,10-14,11-15,12-16
<5>1-6,2-5,3-8,4-7,9-14,10-13,11-16,12-15
<6>1-7,2-8,3-5,4-6,9-15,10-16,11-13,12-14
<7>1-8,2-7,3-6,4-5,9-16,10-15,11-14,12-13
<8>1-9,2-10,3-11,4-12,5-13,6-14,7-15,8-16
<9>1-10,2-9,3-12,4-11,5-14,6-13,7-16,8-15
<10>1-11,2-12,3-9,4-10,5-15,6-16,7-13,8-14
<11>1-12,2-11,3-10,4-9,5-16,6-15,7-14,8-13
<12>1-13,2-14,3-15,4-16,5-9,6-10,7-11,8-12
<13>1-14,2-13,3-16,4-15,5-10,6-9,7-12,8-11
<14>1-15,2-16,3-13,4-14,5-11,6-12,7-9,8-10
<15>1-16,2-15,3-14,4-13,5-12,6-11,7-10,8-9
]]></test_output>
<test_input><![CDATA[3

]]></test_input>
<test_output><![CDATA[<1>1-2,3-4,5-6,7-8
<2>1-3,2-4,5-7,6-8
<3>1-4,2-3,5-8,6-7
<4>1-5,2-6,3-7,4-8
<5>1-6,2-5,3-8,4-7
<6>1-7,2-8,3-5,4-6
<7>1-8,2-7,3-6,4-5
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组 1996年NOIP全国联赛普及组]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<cmath>
using namespace std;
int flag[70][70];
int main()
{
	int i,j,k,n;
	cin>>n;
	int p=pow(2,n); 
	for (j=1;j<=p-1;j++)
	{
		cout<<"<"<<j<<">";
		int a[70]={0},cur=1,last;
		for (cur=1;cur<=p;cur++)
		{
			if (cur&1)
				{
				for (i=1;i<=p;i++) 
					if (a[i]==0) 
					{
						cout<<i<<"-";a[i]=1;last=i;break;
					}
		       }
			else 
			{
			   for(i=1;i<=p;i++) 		
				if (a[i]==0 && flag[last][i]==0)
				{
					if (cur!=p)cout<<i<<",";
					else cout<<i;
					a[i]=1; flag[last][i]=1;
					break;
				} 
			}
		}
		cout<<endl;
	}
	return 0;
} ]]></solution>
			<solution language="Pascal"><![CDATA[var i,j,k,m,n,half,s:integer;
    a:array [1..64,1..64] of integer;
    b:array[1..64]of boolean;
begin
  readln(m);
  n:=1;
  for i:=1 to m do n:=n*2;
  k:=1;a[1,1]:=1;half:=1;
  while k<=m do
  begin
    for i:=1 to half do
      for j:=1 to half do a[i,j+half]:=a[i,j]+half;
    for i:=1 to half do
      for j:=1 to half do
      begin
        a[i+half,j]:=a[i,j+half];
        a[i+half,j+half]:=a[i,j];
      end;
    half:=half*2;
    k:=k+1;
  end;
  for i:=2 to n do
  begin
    write('<',i-1,'>');
    fillchar(b,sizeof(b),true);
    s:=0;
    for j:=1 to n do
      if (b[j]) then
      begin
        write(j,'-',a[j,i]);
        inc(s);
        b[j]:=false;
        b[a[j,i]]:=false;
        if s<>n div 2 then write(',');
      end;
    writeln;
  end;
end.]]></solution>
	</item>
</fps>
