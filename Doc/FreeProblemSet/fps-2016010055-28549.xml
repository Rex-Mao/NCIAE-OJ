<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[神奇的钟点]]></title>
<time_limit unit="s"><![CDATA[10]]></time_limit>
<memory_limit unit="mb"><![CDATA[512]]></memory_limit>

<description><![CDATA[<p>
	<br />
</p>
<p>
	一天，小L看到了3块钟表，分别显示着01:08、03:40、13:52。小L发现，每块表上的时间都是hh:mm的形式，其中h
</p>
<div>
	h表示小时，mm表示分钟，而且都不是整点（即0≤hh&lt;24,1≤mm&lt;60）。回想起小学数学老师刚刚讲的关于比例的知
</div>
<div>
	识，hh:mm也表示一个比，它的值等于hh/mm。这时小L发现了一件神奇的事情：把这三个钟点加起来会得到18:40，
</div>
<div>
	这也是一个不是整点的合法时间（注意小时数要小于24），它对应的比值9/20与这三个钟点对应的比值1/8、3/40
</div>
<div>
	、1/4之和竟然相等！现在小L想知道，把所有的满足这个神奇的性质的3个钟点组成的钟点组按照字典序排序后，
</div>
<div>
	第k小的是什么。
</div>
<p>
	<br />
</p>
<h2>
	Input
</h2>
<div class="content">
	<div>
		输入只包含一个正整数k。
	</div>
	<div>
		对于 30%的数据&nbsp; ，k ≤ 1000。<br />
对于 60%的数据&nbsp; ，k ≤ 20000。<br />
对于 100%的数据&nbsp; ，1 ≤ k ≤ 2*10^9。<br />
	</div>
</div>
<h2>
	Output
</h2>
<div class="content">
	<div>
		输出字典序第k小的满足题目所述神奇性质的钟点组，以一个空格隔开，详见样例输出。
	</div>
	<div>
		如果答案不存在，输出“-1”（不含引号）。
	</div>
</div>
<h2>
	Sample Input
</h2>
<div class="content">
	<span class="sampledata">65432</span> 
</div>
<h2>
	Sample Output
</h2>
<div class="content">
	<span class="sampledata">01:08 03:40 13:52</span> 
</div>
<div class="content">
</div>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[]]></sample_input>
<sample_output><![CDATA[]]></sample_output>
  <test_input><![CDATA[19899
]]></test_input>
<test_output><![CDATA[00:13 01:52 09:39
]]></test_output>
<test_input><![CDATA[63642
]]></test_input>
<test_output><![CDATA[01:02 01:51 20:24
]]></test_output>
<test_input><![CDATA[127034
]]></test_input>
<test_output><![CDATA[22:44 00:59 00:03
]]></test_output>
<test_input><![CDATA[35
]]></test_input>
<test_output><![CDATA[00:01 00:01 00:35
]]></test_output>
<test_input><![CDATA[233
]]></test_input>
<test_output><![CDATA[00:01 00:05 00:11
]]></test_output>
<test_input><![CDATA[123434
]]></test_input>
<test_output><![CDATA[15:51 03:34 02:17
]]></test_output>
<test_input><![CDATA[127035
]]></test_input>
<test_output><![CDATA[-1
]]></test_output>
<test_input><![CDATA[19898
]]></test_input>
<test_output><![CDATA[00:13 01:51 10:30
]]></test_output>
<test_input><![CDATA[988
]]></test_input>
<test_output><![CDATA[00:01 00:22 00:01
]]></test_output>
<test_input><![CDATA[9985
]]></test_input>
<test_output><![CDATA[00:07 00:07 00:07
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[BJWC2018 高级]]></source>
		<solution language="C++"><![CDATA[#include <stdio.h>
int main()
{
	int k;
	scanf("%d", &k);
	int ans = 0;
	for(int i = 0; i <= 22; i++)
		for(int j = 1; j < 60; j++)
			for(int ii = 0; ii <= 22 - i; ii++)
				for(int jj = 1; jj < 60; jj++)
					for(int iii = 0; iii <= 22 - i - ii; iii++)
						for(int jjj = 1; jjj < 60; jjj++)
						{
							int a = i + ii + iii + (j + jj + jjj) / 60;
							int b = (j + jj + jjj) % 60;
							if(i * jj * jjj * b + j * ii * jjj * b + j * jj * iii * b == a * j * jj * jjj)
								if(++ans == k)
								{
									printf("%02d:%02d %02d:%02d %02d:%02d\n", i, j, ii, jj, iii, jjj);
									return 0;
								}
						}
	printf("-1\n");
	return 0;
}
]]></solution>
	</item>
</fps>
