<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[格子问题]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[125]]></memory_limit>

<img><src><![CDATA[http://tk.hustoj.com:80/attached/image/20140108/20140108154504_62166.jpg]]></src><base64><![CDATA[]]></base64></img><description><![CDATA[<p>
	输入三个自然数N，i，j （1&lt;=i&lt;=N，1&lt;=j&lt;=N），输出在一个N*N格的棋盘中，与格子（i，j）同行、同列、同一对角线的所有格子的位置。
</p>
<p>
	<br />
</p>
<p>
	<br />
</p>
<p class="MsoNormal">
	如：<span>n=4</span>，<span>i=2</span>，<span>j=3</span>表示了棋盘中的第二行第三列的格子，如下图：
</p>
<p class="MsoNormal" style="text-align:center;">
	<span style="line-height:1.5;"><img src="http://tk.hustoj.com:80/attached/image/20140108/20140108154504_62166.jpg" alt="" />&nbsp; &nbsp;&nbsp;</span> 
</p>
<p class="MsoNormal" style="margin-left:20.7pt;">
	当<span>n=4</span>，<span>i=2</span>，<span>j=3</span>时，输出的结果是：<span></span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (2,1) (2,2) (2,3) (2,4) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span>同一行上格子的位置<span>}</span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1,3) (2,3) (3,3) (4,3) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>同列列上格子的位置<span>}</span> 
</p>
<p class="MsoNormal" style="text-indent:21.0pt;">
	<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1,2) (2,3) (3,4) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span>左上到右下对角线上的格子的位置<span>}</span> 
</p>
<p>
	&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(4,1) (3,2) (2,3) (1,4) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;{左下到右上对角线上的格子的位置}
</p>
<p>
	<br />
</p>
<p>
	<br />
</p>]]></description>
<input><![CDATA[<p>
	每个测试文件只包含一组测试数据，每组输入数据包含三个自然数N，i，j。
</p>
<p>
	<br />
</p>]]></input> 
<output><![CDATA[<p>
	对于每组输入数据，输出四行数据：
</p>
<p>
	第一行：同一行上格子的位置；
</p>
<p>
	第二行：同列列上格子的位置；
</p>
<p>
	第三行：左上到右下对角线上的格子的位置；
</p>
<p>
	第四行：左下到右上对角线上的格子的位置。
</p>
<p>
	具体格式见样例输出。
</p>
<p>
	<br />
</p>]]></output>
<sample_input><![CDATA[4 2 3
]]></sample_input>
<sample_output><![CDATA[(2,1)(2,2)(2,3)(2,4)
(1,3)(2,3)(3,3)(4,3)
(1,2)(2,3)(3,4)
(4,1)(3,2)(2,3)(1,4)]]></sample_output>
  <test_input><![CDATA[4 4 1

]]></test_input>
<test_output><![CDATA[(4,1)(4,2)(4,3)(4,4)
(1,1)(2,1)(3,1)(4,1)
(4,1)
(4,1)(3,2)(2,3)(1,4)
]]></test_output>
<test_input><![CDATA[6 4 6

]]></test_input>
<test_output><![CDATA[(4,1)(4,2)(4,3)(4,4)(4,5)(4,6)
(1,6)(2,6)(3,6)(4,6)(5,6)(6,6)
(1,3)(2,4)(3,5)(4,6)
(6,4)(5,5)(4,6)
]]></test_output>
<test_input><![CDATA[5 3 3

]]></test_input>
<test_output><![CDATA[(3,1)(3,2)(3,3)(3,4)(3,5)
(1,3)(2,3)(3,3)(4,3)(5,3)
(1,1)(2,2)(3,3)(4,4)(5,5)
(5,1)(4,2)(3,3)(2,4)(1,5)
]]></test_output>
<test_input><![CDATA[1 1 1

]]></test_input>
<test_output><![CDATA[(1,1)
(1,1)
(1,1)
(1,1)
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[NOIP全国联赛普及组 1996年NOIP全国联赛普及组]]></source>
		<solution language="C"><![CDATA[#include<stdio.h>
int main()
{
	int a,b,i,j,n;
	scanf("%d%d%d",&n,&a,&b);
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(i==a)
				printf("(%d,%d)",i,j);
		}
	
	}
	printf("\n");
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(j==b)
				printf("(%d,%d)",i,j);
		}
	}
	printf("\n");
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(j-i==b-a)
				printf("(%d,%d)",i,j);
		}
	}
	printf("\n");
		for(i=n;i>0;i--)
	{
		for(j=n;j>0;j--)
		{
			if(j+i==b+a)
				printf("(%d,%d)",i,j);
		}
	}
	printf("\n");
	return 0;

}]]></solution>
			<solution language="C++"><![CDATA[#include<iostream>
#include<cmath>
using namespace std;
int main()
{
	int N,i,j;
	cin >> N >> i >> j;
	for(int k=1; k<=N; ++k)
		cout << "(" << i << "," << k << ")";
	cout << endl;
	for(int k=1; k<=N; ++k)
		cout << "(" << k << "," << j << ")";
	cout << endl;
	if(j-i>=0)
	{
		for(int k=1; k<=N-(int)fabs(j-i); ++k)
			cout << "(" << k << "," << (int)fabs(j-i)+k << ")";
	}
	else
	{
		for(int k=1; k<=N-(int)fabs(j-i); ++k)
			cout << "(" << (int)fabs(j-i)+k << "," << k << ")";
	}		 	 
	cout << endl;
	if((i+j)-(N+1)>=0)	
	{
		for(int k=N-(int)fabs((i+j)-(N+1)); k>=1; --k)
			cout << "(" << k+(int)fabs((i+j)-(N+1)) << "," << N+1-k << ")";
	}
	else
	{
		for(int k=N-(int)fabs((i+j)-(N+1)); k>=1; --k)
			cout << "(" << k << "," << N-(int)fabs((i+j)-(N+1))-k+1 << ")";
	}
	cout << endl;
	return 0;
}/*
 0  1  2  3
-1  0  1  2
-2 -1  0  1
-3 -2 -1  0 */]]></solution>
			<solution language="Pascal"><![CDATA[var o,u,k,p,n,a,b,l,m,i:longint;
begin
 readln(n,a,b);
 for i:=1 to n do write('(',a,',',i,')');
 writeln;
 for i:=1 to n do write('(',i,',',b,')');
 writeln;
 i:=0;
 if b>a then begin l:=b;m:=a;end
  else begin l:=a;m:=b;end;
 if a<b then begin
 for i:=1 to n-l+m do write('(',i,',',i+l-m,')');
  end
  else
  repeat
   i:=i+1;
   write('(',i+(l-m),',',i+(l-m)-(l-m),')') ;
  until i+(l-m)=n;
 writeln;
 if l+m-1>n then
  begin
  l:=n-l+1;
  m:=n-m+1;
  if l>m then
  begin
  o:=l;u:=m;
  end
  else
  begin u:=l;o:=m;
  end;
  k:=n-l-1-(o-u) div 2;
  p:=n-m-1-(u-o) div 2;
  end;
 for i:=1  to l+m-1  do write('(',l+m-i+k,',',i+p,')');
end.]]></solution>
			<solution language="Java"><![CDATA[import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scanner = new Scanner(System.in);
		int N = scanner.nextInt(); // N*N格
		int i = scanner.nextInt(); // 第i行，格子(i，j)
		int j = scanner.nextInt(); // 第j列，格子(i，j)

		// (i，j)同一行上格子的位置
		for (int a = 1; a <= N; a++) {
			System.out.print("(" + i + "," + a + ")");
		}
		System.out.println();

		// (i,j)同一列上格子的位置
		for (int a = 1; a <= N; a++) {
			System.out.print("(" + a + "," + j + ")");
		}
		System.out.println();

		// 左上到右下对角线上的格子的位置
		// 从上往下，所以小到大，++
		for (int a = 1; a <= N; a++) {
			for (int b = 1; b <= N; b++) {
				if ((a - b) == (i - j)) {
					System.out.print("(" + a + "," + b + ")");
				}
			}
		}
		System.out.println();

		// 左下到右上对角线上的格子的位置
		// 从下往上，所以大到小，--
		for (int a = N; a >= 1; a--) {
			for (int b = N; b >= 1; b--) {
				if ((a + b) == (i + j)) {
					System.out.print("(" + a + "," + b + ")");
				}
			}
		}
	}
}]]></solution>
	</item>
</fps>
