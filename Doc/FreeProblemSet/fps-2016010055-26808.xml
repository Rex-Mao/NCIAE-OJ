<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[最大和]]></title>
<time_limit unit="s"><![CDATA[0]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>
	<span style="font-size:14px;">现给定一串数N，求出连续的数相加的最大值，例如：1 6 9 -5 4，连续数的最大和就是1+6+9=16；6 -3 4 0&nbsp;</span>
</p>
<p>
	<span style="font-size:14px;">-1，连续数的最大和是6+（-3）+4=7；</span>
</p>]]></description>
<input><![CDATA[<p class="MsoNormal" align="left" style="text-indent:21pt;">
	<span style="font-size:14px;">测试包含多组测试数据</span><span style="font-size:14px;">,</span><span style="font-size:14px;">每组测试数据包含两行，</span><span></span>
</p>
<p class="MsoNormal" align="left">
	<span style="font-size:14px;">第一行输入一个整数</span><span style="font-size:14px;">N</span>
</p>
<p class="MsoNormal" align="left">
	<span style="font-size:14px;">1&lt;=N&lt;=100</span>
</p>
<p class="MsoNormal" align="left">
	<span style="font-size:14px;">接下来一行含有</span><span style="font-size:14px;">N</span><span style="font-size:14px;">个数，保证每个数取值范围是（</span><span style="font-size:14px;">-100000</span><span style="font-size:14px;">，</span><span style="font-size:14px;">+100000</span><span style="font-size:14px;">），两个数中间用空格隔开</span><span></span>
</p>]]></input> 
<output><![CDATA[<p class="MsoNormal" align="left" style="text-indent:21pt;">
	<span style="font-size:14px;">对于每组测试数据输出连续数的最大和</span><span></span>
</p>]]></output>
<sample_input><![CDATA[5
1 6 9 -5 4
5
6 -3 4 0 -1]]></sample_input>
<sample_output><![CDATA[16
7]]></sample_output>
  <test_input><![CDATA[20
0 -1 1 -1 2 -3 4 -5 6 -7 8 -9 0 20 -3 2 0 -99 20 1
5
998 -997 2 -1 2
23
10 -9 8 -7 6 -5 4 -3 2 -1 0 1 -2 3 -4 5 -6 7 -8 9 1 -3 2
3
99999 -1 99999
6
1 0 1 0 1 0
9
1 2 3 4 -5 -6 -7 2 4
9
0 0 3 -9 9 -6 5 -99 99
1
0
2
-1 1
2
1 -1
9
659 -645 -6 -1 930 -99 -6 105 1]]></test_input>
<test_output><![CDATA[21
998
11
199997
3
10
99
0
1
1
938]]></test_output>
<hint><![CDATA[出题人：杨浩]]></hint>
<source><![CDATA[GZU]]></source>
		<solution language="C"><![CDATA[#include <stdio.h>
int main()
{
	int N;
	int a[100],i,j,k;
	int thisSum=0,maxSum=0;
	while(scanf("%d",&N)!=EOF&&N>=1&&N<=100)
	{
       for(i=0;i<N;i++)
       {
   	     scanf("%d",&a[i]);
       }
       maxSum=a[0];
       for ( i = 0; i<N; i++ )  
       {
           for (j = 1; j<N; j++ )   
           {  
               thisSum = 0;  
                 for ( k = i; k <= j; k++ )  
                 {
                   thisSum+= a[k];  
                 }
                  if ( thisSum > maxSum )  
                  {
                    maxSum=thisSum;  
                }
           }  
       }
          printf("%d\n",maxSum);
   }
   return 0;
}]]></solution>
			<solution language="C++"><![CDATA[#include <bits/stdc++.h>
using namespace std;
int main()
{
	int n;
	while(~scanf("%d",&n)){
		int a[105];
		for (int i=0;i<n;i++){
			scanf("%d",&a[i]);
		}
		
		int d[105];
		memset(d,0,sizeof(d));
		
		if (a[0]>=0) d[0]=a[0];
		
		int maxx=d[0];
		for (int i=1;i<n;i++){
			if (d[i-1]+a[i]>0) d[i]=d[i-1]+a[i];
			maxx=max(maxx,d[i]);
		}
		
		printf("%d\n",maxx);
		
	}
	return 0;
}]]></solution>
			<solution language="Java"><![CDATA[import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		int N;
		int i,j,k;
		int[] a = new int[100];
		int thisSum=0,maxSum=0;
		Scanner scan = new Scanner(System.in);
		while (scan.hasNextInt()) {
			 N = scan.nextInt();
			 for(i=0;i<N;i++)
		     {
			   a[i] = scan.nextInt();
		     }
			 maxSum=a[0];
			 for ( i = 0; i<N; i++ ){
				 for (j = 1; j<N; j++ ){
					 thisSum = 0; 
					 for ( k = i; k <= j; k++ ) {
	                   thisSum+= a[k];  
	                 }
	                 if ( thisSum > maxSum ){
	                    maxSum=thisSum;  
	                 } 
				 } 
			 }
			 System.out.println(maxSum);
	    }
   }
}]]></solution>
	</item>
</fps>
